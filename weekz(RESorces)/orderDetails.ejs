<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>NOOR Fragrance - Product Details</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Akshar:wght@400;600&display=swap"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css"
    />
    <script src="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>

    <style>
      body {
        font-family: "Akshar", sans-serif;
        background-color: #f9f9f9;
        color: #333;
      }

      .user-dashboard {
        padding: 30px 0;
      }

      .info-container {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        padding: 18px;
        margin-bottom: 20px;
      }

      .section-title {
        font-size: 24px;
        font-weight: 600;
        margin-bottom: 25px;
        color: #333;
        padding-bottom: 10px;
        border-bottom: 1px solid #eaeaea;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .action-buttons {
        display: flex;
        gap: 10px;
      }

      .cancel-btn {
        background-color: #6c757d;
        color: white;
        border: none;
        padding: 8px 15px;
        border-radius: 5px;
        font-size: 14px;
        cursor: pointer;
        transition: background 0.2s;
        display: flex;
        align-items: center;
        gap: 5px;
      }

      .invoice-btn {
        background-color: #fd334e;
        color: white;
        border: none;
        padding: 8px 15px;
        border-radius: 5px;
        font-size: 14px;
        cursor: pointer;
        transition: background 0.2s;
        display: flex;
        align-items: center;
        gap: 5px;
      }

      .cancel-btn:hover {
        background-color: #5a6268;
      }

      .invoice-btn:hover {
        background-color: #e62b42;
      }

      /* Order Tracking */
      .order-track-wrapper {
        padding: 10px 0 30px;
      }
      
      .order-track {
        display: flex;
        align-items: center;
        width: 100%;
        position: relative;
        margin-bottom: 30px;
      }
      
      .order-track-step {
        display: flex;
        flex-direction: column;
        align-items: center;
        flex: 1;
        position: relative;
        z-index: 10;
      }
      
      .order-track-step-dot {
        height: 30px;
        width: 30px;
        border-radius: 50%;
        background-color: #ccc;
        display: flex;
        justify-content: center;
        align-items: center;
        color: white;
      }
      
      .order-track-text {
        margin-top: 12px;
        font-size: 14px;
        font-weight: 600;
        color: #666;
      }
      
      .order-track-progress {
        position: absolute;
        width: 100%;
        height: 3px;
        background-color: #ccc;
        top: 15px;
        z-index: 1;
      }
      
      .order-track-progress-bar {
        position: absolute;
        height: 100%;
        background-color: #fd334e;
        transition: width 0.3s ease;
      }
      
      .order-track-step.active .order-track-step-dot {
        background-color: #fd334e;
      }
      
      .order-track-step.active .order-track-text {
        color: #fd334e;
      }
      
      .order-track-step.completed .order-track-step-dot {
        background-color: #fd334e; /* Changed from green to red */
      }

      /* Product details */
      .product-card {
        display: flex;
        border-bottom: 1px solid #eaeaea;
        padding: 15px 0;
      }
      
      .product-image {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border-radius: 8px;
        border: 1px solid #eaeaea;
      }
      
      .product-details {
        flex-grow: 1;
        margin-left: 20px;
      }
      
      .product-name {
        font-size: 18px;
        font-weight: 600;
        margin-bottom: 8px;
        color: #333;
      }
      
      .product-meta {
        display: flex;
        align-items: center;
        gap: 15px;
        color: #666;
        font-size: 14px;
        margin-bottom: 5px;
      }

      .product-price {
        font-weight: 600;
      }
      
      .product-quantity {
        color: #666;
      }
      
      .product-status {
        margin-top: 10px;
      }

      /* Address Box */
      .address-box {
        padding: 15px;
        background-color: #f8f9fa;
        border-radius: 8px;
        margin-bottom: 15px;
      }
      
      .address-title {
        font-weight: 600;
        margin-bottom: 10px;
        color: #333;
        font-size: 16px;
      }
      
      .address-content {
        color: #666;
        line-height: 1.5;
      }

      /* Order Summary */
      .order-summary {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
      }
      
      .summary-title {
        font-weight: 600;
        margin-bottom: 15px;
        color: #333;
        font-size: 16px;
      }
      
      .summary-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 8px;
        color: #666;
      }
      
      .summary-row.total {
        font-weight: 600;
        color: #333;
        font-size: 18px;
        padding-top: 10px;
        margin-top: 10px;
        border-top: 1px solid #ddd;
      }
      
      /* Invoice Styles */
      #invoice-template {
        display: none;
      }
      
      /* Status badge styles */
      .status-badge {
        padding: 5px 10px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 600;
        display: inline-block;
      }
      
      .status-pending {
        background-color: #ffc107;
        color: #212529;
      }
      
      .status-processing, .status-proccessing {
        background-color: #fd334e;
        color: white;
      }
      
      .status-shipped {
        background-color: #17a2b8;
        color: white;
      }
      
      .status-delivered {
        background-color: #fd334e;
        color: white;
      }
      
      .status-cancelled {
        background-color: #6c757d;
        color: white;
      }
      
      .status-return {
        background-color: #6f42c1;
        color: white;
      }

      /* Responsive Adjustments */
      @media (max-width: 767px) {
        .info-container {
          padding: 20px 15px;
        }

        .section-title {
          font-size: 20px;
          flex-direction: column;
          align-items: flex-start;
          gap: 15px;
        }
        
        .action-buttons {
          align-self: flex-end;
        }

        .order-track {
          overflow-x: auto;
          padding-bottom: 15px;
        }
        
        .order-track-text {
          font-size: 12px;
        }
        
        .product-card {
          flex-direction: column;
        }
        
        .product-image {
          width: 80px;
          height: 80px;
          margin-bottom: 15px;
        }
        
        .product-details {
          margin-left: 0;
        }
      }
    </style>
  </head>
  <body>
    <%- include("../../views/partials/user/header") %>

    <div class="container user-dashboard">
      <div class="row">
        <div class="col-lg-3 mb-4">
          <%- include("../../views/partials/user/profileMenu") %>
        </div>

        <div class="col-lg-9">
          <!-- Order Details Header -->
          <div class="info-container">
            <div class="section-title">
              <span>Order Details <span class="text-muted">#<%= order.orderId %></span></span>
              <div class="action-buttons">
                <% if (order.status !== 'Cancelled' && order.status !== 'Delivered' && order.status !== 'Return Request' && order.status !== 'Returned') { %>
                  <button class="cancel-btn" id="cancelOrderBtn">
                    <i class="fas fa-times"></i> Cancel Order
                  </button>
                <% } %>
                <button class="invoice-btn" id="downloadInvoiceBtn">
                  <i class="fas fa-file-invoice"></i> Invoice
                </button>
              </div>
            </div>

            <!-- Order Tracking -->
            <div class="order-track-wrapper">
              <div class="order-track">
                <div class="order-track-step <%= order.status === 'Pending' || order.status === 'Proccessing' || order.status === 'Shipped' || order.status === 'Delivered' ? 'completed' : '' %>">
                  <div class="order-track-step-dot">
                    <i class="fas fa-check"></i>
                  </div>
                  <div class="order-track-text">Order Placed</div>
                </div>
                <div class="order-track-step <%= order.status === 'Proccessing' || order.status === 'Shipped' || order.status === 'Delivered' ? 'completed' : order.status === 'Pending' ? 'active' : '' %>">
                  <div class="order-track-step-dot">
                    <i class="<%= order.status === 'Proccessing' || order.status === 'Shipped' || order.status === 'Delivered' ? 'fas fa-check' : 'fas fa-spinner' %>"></i>
                  </div>
                  <div class="order-track-text">Processing</div>
                </div>
                <div class="order-track-step <%= order.status === 'Shipped' || order.status === 'Delivered' ? 'completed' : order.status === 'Proccessing' ? 'active' : '' %>">
                  <div class="order-track-step-dot">
                    <i class="<%= order.status === 'Shipped' || order.status === 'Delivered' ? 'fas fa-check' : 'fas fa-truck' %>"></i>
                  </div>
                  <div class="order-track-text">Shipped</div>
                </div>
                <div class="order-track-step <%= order.status === 'Delivered' ? 'completed' : order.status === 'Shipped' ? 'active' : '' %>">
                  <div class="order-track-step-dot">
                    <i class="<%= order.status === 'Delivered' ? 'fas fa-check' : 'fas fa-box' %>"></i>
                  </div>
                  <div class="order-track-text">Delivered</div>
                </div>
                <div class="order-track-progress">
                  <div class="order-track-progress-bar" style="width: <%= 
                    order.status === 'Pending' ? '12%' : 
                    order.status === 'Proccessing' ? '38%' : 
                    order.status === 'Shipped' ? '75%' : 
                    order.status === 'Delivered' ? '100%' :
                    order.status === 'Cancelled' ? '0%' : '0%' 
                  %>;"></div>
                </div>
              </div>
            </div>
            
            <!-- Order Status Badge -->
            <div class="text-center mb-3">
              <span class="status-badge status-<%= order.status.toLowerCase() %>">
                <%= order.status %>
              </span>
              <span class="ms-2 text-muted">Order Date: <%= new Date(order.createdOn).toLocaleDateString() %></span>
            </div>
          </div>

          <!-- Address Details -->
          <div class="row mb-4">
            <div class="col-md-6 mb-3 mb-md-0">
              <div class="address-box">
                <div class="address-title">
                  <i class="fas fa-map-marker-alt me-2"></i> Shipping Address
                </div>
                <div class="address-content">
                  <%= order.address.name %><br>
                  <%= order.address.street %>, <%= order.address.apartment %><br>
                  <%= order.address.city %>, <%= order.address.state %> <%= order.address.zipCode %><br>
                  <%= order.address.country %><br>
                  Phone: <%= order.address.phone %>
                </div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="address-box">
                <div class="address-title">
                  <i class="fas fa-file-invoice me-2"></i> Billing Address
                </div>
                <div class="address-content">
                  <%= order.address.name %><br>
                  <%= order.address.street %>, <%= order.address.apartment %><br>
                  <%= order.address.city %>, <%= order.address.state %> <%= order.address.zipCode %><br>
                  <%= order.address.country %><br>
                  Phone: <%= order.address.phone %>
                </div>
              </div>
            </div>
          </div>

          <!-- Product Details -->
          <div class="info-container">
            <h3 class="section-title">Order Items</h3>
            
            <% order.orderedItems.forEach(item => { %>
              <div class="product-card">
                <img src="<%= item.product.images[0] || '/api/placeholder/100/100' %>" alt="<%= item.product.name %>" class="product-image">
                <div class="product-details">
                  <div class="product-name"><%= item.product.name %></div>
                  <div class="product-meta">
                    <span class="product-price">₹<%= item.price.toFixed(2) %></span>
                    <span class="product-quantity">Qty: <%= item.quantity %></span>
                  </div>
                  <div class="product-status">
                    <span class="status-badge status-<%= order.status.toLowerCase() %>"><%= order.status %></span>
                  </div>
                </div>
              </div>
            <% }); %>
            
            <!-- Order Summary -->
            <div class="row mt-4">
              <div class="col-md-6 ms-auto">
                <div class="order-summary">
                  <div class="summary-title">Order Summary</div>
                  <div class="summary-row">
                    <span>Subtotal</span>
                    <span>₹<%= order.totalPrice.toFixed(2) %></span>
                  </div>
                  <div class="summary-row">
                    <span>Shipping</span>
                    <span>₹199.00</span>
                  </div>
                  <% if (order.discount > 0) { %>
                  <div class="summary-row">
                    <span>Discount</span>
                    <span>-₹<%= order.discount.toFixed(2) %></span>
                  </div>
                  <% } %>
                  <div class="summary-row">
                    <span>Tax</span>
                    <span>₹<%= (order.finalAmount - order.totalPrice + order.discount - 199).toFixed(2) %></span>
                  </div>
                  <div class="summary-row total">
                    <span>Total</span>
                    <span>₹<%= order.finalAmount.toFixed(2) %></span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Invoice Template for PDF Generation (Hidden) -->
    <div id="invoice-template" style="width: 800px; padding: 40px; font-family: Arial, sans-serif;">
      <div style="display: flex; justify-content: space-between; margin-bottom: 30px;">
        <div>
          <h1 style="margin: 0; color: #333;">INVOICE</h1>
          <p style="margin: 5px 0; color: #666;">NOOR Fragrance</p>
        </div>
        <div style="text-align: right;">
          <h2 style="margin: 0; color: #fd334e;">#<%= order.orderId %></h2>
          <p style="margin: 5px 0; color: #666;">Date: <%= new Date(order.createdOn).toLocaleDateString() %></p>
        </div>
      </div>
      
      <div style="display: flex; justify-content: space-between; margin-bottom: 30px;">
        <div style="width: 45%;">
          <h3 style="margin: 0 0 10px; color: #333;">Bill To:</h3>
          <p style="margin: 0; color: #666;"><%= order.address.name %></p>
          <p style="margin: 0; color: #666;"><%= order.address.street %>, <%= order.address.apartment %></p>
          <p style="margin: 0; color: #666;"><%= order.address.city %>, <%= order.address.state %> <%= order.address.zipCode %></p>
          <p style="margin: 0; color: #666;"><%= order.address.country %></p>
          <p style="margin: 0; color: #666;">Phone: <%= order.address.phone %></p>
        </div>
        <div style="width: 45%;">
          <h3 style="margin: 0 0 10px; color: #333;">Payment Information:</h3>
          <p style="margin: 0; color: #666;">Status: <%= order.status %></p>
          <p style="margin: 0; color: #666;">Order Date: <%= new Date(order.createdOn).toLocaleDateString() %></p>
          <% if (order.invoiceDate) { %>
          <p style="margin: 0; color: #666;">Invoice Date: <%= new Date(order.invoiceDate).toLocaleDateString() %></p>
          <% } %>
        </div>
      </div>
      
      <table style="width: 100%; border-collapse: collapse; margin-bottom: 30px;">
        <thead>
          <tr style="background-color: #f8f9fa;">
            <th style="padding: 10px; text-align: left; border-bottom: 1px solid #ddd;">Product</th>
            <th style="padding: 10px; text-align: right; border-bottom: 1px solid #ddd;">Price</th>
            <th style="padding: 10px; text-align: right; border-bottom: 1px solid #ddd;">Qty</th>
            <th style="padding: 10px; text-align: right; border-bottom: 1px solid #ddd;">Total</th>
          </tr>
        </thead>
        <tbody>
          <% order.orderedItems.forEach(item => { %>
          <tr>
            <td style="padding: 10px; border-bottom: 1px solid #eee;"><%= item.product.name %></td>
            <td style="padding: 10px; text-align: right; border-bottom: 1px solid #eee;">₹<%= item.price.toFixed(2) %></td>
            <td style="padding: 10px; text-align: right; border-bottom: 1px solid #eee;"><%= item.quantity %></td>
            <td style="padding: 10px; text-align: right; border-bottom: 1px solid #eee;">₹<%= (item.price * item.quantity).toFixed(2) %></td>
          </tr>
          <% }); %>
        </tbody>
      </table>
      
      <div style="margin-left: auto; width: 300px;">
        <div style="display: flex; justify-content: space-between; padding: 5px 0;">
          <span>Subtotal:</span>
          <span>₹<%= order.totalPrice.toFixed(2) %></span>
        </div>
        <div style="display: flex; justify-content: space-between; padding: 5px 0;">
          <span>Shipping:</span>
          <span>₹199.00</span>
        </div>
        <% if (order.discount > 0) { %>
        <div style="display: flex; justify-content: space-between; padding: 5px 0;">
          <span>Discount:</span>
          <span>-₹<%= order.discount.toFixed(2) %></span>
        </div>
        <% } %>
        <div style="display: flex; justify-content: space-between; padding: 5px 0;">
          <span>Tax:</span>
          <span>₹<%= (order.finalAmount - order.totalPrice + order.discount - 199).toFixed(2) %></span>
        </div>
        <div style="display: flex; justify-content: space-between; padding: 10px 0; font-weight: bold; border-top: 1px solid #ddd; margin-top: 5px;">
          <span>Total:</span>
          <span>₹<%= order.finalAmount.toFixed(2) %></span>
        </div>
      </div>
      
      <div style="margin-top: 40px; text-align: center; color: #666; font-size: 14px;">
        <p>Thank you for shopping with NOOR Fragrance!</p>
        <p>If you have any questions, please contact our customer service at support@noor.com</p>
      </div>
    </div>

    <%- include("../../views/partials/user/footer") %>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const notyf = new Notyf({
          duration: 3000,
          position: {
            x: "right",
            y: "bottom",
          },
          types: [
            {
              type: "success",
              background: "#fd334e", // Changed to red to match your brand color
              icon: {
                className: "fas fa-check",
                tagName: "i",
                color: "white",
              },
            },
            {
              type: "error",
              background: "#dc3545",
              icon: {
                className: "fas fa-times",
                tagName: "i",
                color: "white",
              },
            },
          ],
        });

        // Status mapping for progress calculation
        const statusProgress = {
          "Pending": 0,
          "Proccessing": 1, 
          "Shipped": 2,
          "Delivered": 3,
          "Cancelled": -1,
          "Return Request": 3,
          "Returned": 3,
          "Return Rejected": 3
        };
        
        // Get current status from the EJS data
        const currentStatus = "<%= order.status %>";
        const currentStep = statusProgress[currentStatus];
        
        // Invoice download functionality
        document.getElementById('downloadInvoiceBtn').addEventListener('click', function() {
          generateInvoicePDF();
        });

        // Cancel order functionality
        const cancelOrderBtn = document.getElementById('cancelOrderBtn');
        if (cancelOrderBtn) {
          cancelOrderBtn.addEventListener('click', function() {
            Swal.fire({
              title: 'Cancel Order',
              text: 'Are you sure you want to cancel this order?',
              icon: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#fd334e',
              cancelButtonColor: '#6c757d',
              confirmButtonText: 'Yes, Cancel Order',
              cancelButtonText: 'No, Keep Order'
            }).then((result) => {
              if (result.isConfirmed) {
                // Send AJAX request to cancel the order
                fetch('/user/orders/cancel/<%= order._id %>', {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': '<%= csrfToken %>' // Assuming you have CSRF protection
                  }
                })
                .then(response => response.json())
                .then(data => {
                  if (data.success) {
                    Swal.fire(
                      'Cancelled!',
                      'Your order has been cancelled.',
                      'success'
                    ).then(() => {
                      window.location.reload();
                    });
                  } else {
                    Swal.fire(
                      'Error!',
                      data.message || 'There was an error cancelling your order.',
                      'error'
                    );
                  }
                })
                .catch(error => {
                  console.error('Error:', error);
                  Swal.fire(
                    'Error!',
                    'There was an error processing your request.',
                    'error'
                  );
                });
              }
            });
          });
        }

        // Function to generate PDF invoice
        function generateInvoicePDF() {
          const { jsPDF } = window.jspdf;
          
          // Get the invoice template HTML element
          const element = document.getElementById('invoice-template');
          element.style.display = 'block'; // Make it visible temporarily
          
          // Use html2canvas to capture the element as an image
          html2canvas(element, {
            scale: 2, // Increase quality
            logging: false,
            useCORS: true
          }).then(canvas => {
            // Hide the element again
            element.style.display = 'none';
            
            const imgData = canvas.toDataURL('image/png');
            
            // Create PDF document
            const pdf = new jsPDF('p', 'mm', 'a4');
            const imgProps = pdf.getImageProperties(imgData);
            const pdfWidth = pdf.internal.pageSize.getWidth();
            const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;
            
            pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);
            
            // Save PDF
            pdf.save(`NOOR_Invoice_<%= order.orderId %>.pdf`);
            
            // Show success notification
            notyf.success('Invoice downloaded successfully!');
          }).catch(error => {
            console.error('Error generating PDF:', error);
            notyf.error('Error generating invoice. Please try again.');
          });
        }
      });
    </script>
  </body>
</html>