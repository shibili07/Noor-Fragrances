<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        body {
            background-color: #f5f5f7;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .order-details-container {
            max-width: 1200px;
            margin: 30px auto;
            padding: 20px;
            transition: all 0.3s ease;
        }

        .order-card {
            background-color: #fff;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            padding: 25px;
            margin-bottom: 20px;
        }

        .card-title {
            color: #333;
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 20px;
        }

        .order-info {
            padding-bottom: 15px;
        }

        .info-label {
            font-weight: 600;
            color: #555;
            display: inline-block;
            margin-right: 5px;
        }

        .order-status {
            display: flex;
            align-items: center;
            justify-content: flex-start;
        }

        .status-badge {
            padding: 8px 16px;
            border-radius: 20px;
            font-weight: bold;
            font-size: 14px;
            text-align: center;
            display: inline-block;
        }

        .status-delivered {
            background-color: #34c759;
            color: white;
        }

        .status-processing {
            background-color: #ff9500;
            color: white;
        }

        .status-cancelled {
            background-color: #ff3b30;
            color: white;
        }

        .status-shipped {
            background-color: #007aff;
            color: white;
        }

        .update-status-btn {
            background-color: #5e5ce6;
            color: white;
            font-weight: 500;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            width: 100%;
            margin-top: 15px;
        }

        .update-status-btn:hover {
            background-color: #4b4ab3;
            color: white;
        }

        .order-items-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
        }

        .order-items-table th {
            background-color: #1c1c24;
            color: white;
            padding: 12px 15px;
            font-weight: 600;
            text-align: left;
        }

        .order-items-table td {
            padding: 15px;
            vertical-align: middle;
            border-bottom: 1px solid #e4e4e4;
        }

        .total-row td {
            font-weight: 600;
            padding-top: 20px;
        }

        .return-button {
            background-color: transparent;
            color: #ff3b30;
            border: 1px solid #ff3b30;
            border-radius: 20px;
            padding: 5px 15px;
            font-size: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .return-button:hover {
            background-color: #ff3b30;
            color: white;
        }

        .return-request {
            margin-top: 20px;
            padding: 15px;
            background-color: #f8f9fa;
            border-radius: 8px;
            border: 1px solid #e4e4e4;
        }

        .return-form label {
            font-weight: 500;
            margin-bottom: 5px;
        }

        .return-form select,
        .return-form textarea {
            margin-bottom: 15px;
            width: 100%;
            padding: 8px;
            border-radius: 5px;
            border: 1px solid #ddd;
        }

        .return-form button {
            background-color: #ff3b30;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .return-form button:hover {
            background-color: #e52d20;
        }

        /* Responsive adjustments */
        @media (max-width: 992px) {
            .order-details-container {
                margin-left: 80px;
                padding: 15px;
            }
        }

        @media (max-width: 768px) {
            .order-details-container {
                margin-left: 0;
                padding: 10px;
            }

            .order-card {
                padding: 15px;
            }

            .order-info {
                flex-direction: column;
            }

            .order-items-table thead {
                display: none;
            }

            .order-items-table,
            .order-items-table tbody,
            .order-items-table tr,
            .order-items-table td {
                display: block;
                width: 100%;
            }

            .order-items-table tr {
                margin-bottom: 15px;
                border-bottom: 1px solid #e4e4e4;
                position: relative;
            }

            .order-items-table td {
                text-align: right;
                padding: 10px;
                position: relative;
                border-bottom: none;
            }

            .order-items-table td::before {
                content: attr(data-label);
                position: absolute;
                left: 10px;
                font-weight: 600;
                text-align: left;
            }

            .order-items-table .return-col {
                text-align: center;
            }

            .total-row td::before {
                content: "Total";
            }
        }

        /* Adjust for the sidebar */
        @media (min-width: 993px) {
            .order-details-container {
                margin-left: 280px;
            }

            body.sidebar-collapsed .order-details-container {
                margin-left: 80px;
            }
        }
    </style>
</head>

<body>
    <header><%- include("../../views/partials/admin/header")%></header>
    <div class="order-details-container">
        <!-- Order Details Card -->
        <div class="order-card">
            <h2 class="card-title">Order Details</h2>
            <div class="row mb-4">
                <div class="col-md-8">
                    <h5 class="mb-3">Order Information</h5>
                    <div class="order-info mb-2">
                        <span class="info-label">Order ID:</span>
                        <span>
                            <%= order.orderId %>
                        </span>
                    </div>
                    <div class="order-info mb-2">
                        <span class="info-label">Customer Name:</span>
                        <span>
                            <%= order.userId.name %>
                        </span>
                    </div>
                    <div class="order-info mb-2">
                        <span class="info-label">Order Date:</span>
                        <span>
                            <%= order.createdOn.toDateString() %>
                        </span>
                    </div>
                    <div class="order-info mb-2">
                        <span class="info-label">Shipping Address:</span>
                        <span>
                            <%= address.name %>, 
                            <%= address.city %>, 
                            <%= address.state %> - 
                            <%= address.pincode %><br>
                            Phone: <%= address.phone %> 
                            <% if (address.altPhone) { %>
                                | Alt: <%= address.altPhone %>
                            <% } %>
                        </span>
                    </div>
                    <%if(order.status==="Cancelled"){%>
                    <div class="order-info mb-2">
                        <span class="info-label">Cancellation Reason:</span>
                        <span>
                            <%= order.cancellationReason %>
                        </span>
                    </div>
                    <%}%>
                    

                </div>


               
                <div class="col-md-4">

                    <%if(order.status!=="Cancelled"){%>
                    <form id="statusUpdateForm" action="/admin/updateStatus">
                        <input type="hidden" name="orderId" value="<%=order.orderId%>">
                        <div class="status-update">
                            <select class="form-select mb-3" name="status">
                                <% ['Pending','Processing', 'Shipped' , 'Delivered' ].forEach(stat=> { %>
                                    <option value="<%= stat %>" <%=order.status===stat ? "selected" : "" %>><%= stat %>
                                    </option>
                                    <% }) %>
                            </select>
                            <button type="submit" class="update-status-btn">Update Status</button>
                        </div>
                    </form>
                    <%}%>

                </div>
            </div>
        </div>

        <!-- Order Items Card -->
        <div class="order-card">
            <h2 class="card-title">Order Items</h2>
            <div class="table-responsive">
                <table class="order-items-table">
                    <thead>
                        <tr>
                            <th style="width: 18%;">Product</th>
                            <th style="width: 28%;">Product Name</th>
                            <th style="width: 18%;">Quantity</th>
                            <th style="width: 12%;">Unit Price</th>
                            <th style="width: 12%;">Total Price</th>
                            <th style="width: 12%;">Status</th>
                        </tr>

                    </thead>
                    <tbody>
                        <% order.orderedItems.forEach(item=> { %>
                            <tr>
                                <td>
                                    <img src="<%= item.product.productImage[0] %>" alt="image"
                                        style="width:50px; height: auto;">
                                </td>

                                <td data-label="Product">
                                    <%= item.product.productName %>
                                </td>
                                <td data-label="Quantity">
                                    <%= item.quantity %>
                                </td>
                                <td data-label="Price">₹<%= item.price %>
                                </td>
                                <td data-label="Total Price">₹<%= item.quantity * item.price %>
                                </td>

                                <td class="status-<%=item.status%>">
                                    <%=item.status%>
                                </td>
                            </tr>
                            <% }) %>
                                <tr class="total-row">
                                    <td colspan="4" data-label="Total">Total</td>
                                    <td colspan="2" data-label="Total Price">₹<%= order.finalAmount.toFixed(2) %></td>
                                </tr>
                    </tbody>
                </table>
            </div>
        </div>


        <!-- Return Request Form (Always Visible) -->

        <div class="order-card">
            <h2 class="card-title">Return Items</h2>
            <div class="table-responsive">
                <table class="order-items-table">
                    <thead>
                        <tr>
                            <th style="width: 15%;">Product</th>
                            <th style="width: 15%;">Product Name</th>
                            <th style="width: 15%;">Quantity</th>
                            <th style="width: 15%;">Price</th>
                            <th style="width: 20%;">Reason</th>
                            <th style="width: 20%;">Action</th>
                        </tr>

                    </thead>
                    <% order.orderedItems.forEach(item=> { %>
                        <%if(item.status==='Return Request'){%>

                            <tbody>

                                <tr>
                                    <td>
                                        <img src="<%= item.product.productImage[0] %>"
                                            alt="image" style="width:50px; height: auto;">
                                    </td>
                                    <td data-label="Product">
                                        <%= item.product.productName %>
                                    </td>
                                    <td data-label="Quantity">
                                        <%= item.quantity %>
                                    </td>
                                    <td data-label="Price">₹<%= item.price %>
                                    </td>
                                    <td><%=item.returnReason%></td>
                                    <td>
                                        <button 
                                        class="btn btn-success return-action-accept-btn" 
                                        data-action="accept"
                                        data-order-id="<%= order.orderId %>"
                                        data-item-id="<%= item._id %>"
                                    >Accept</button>
                                    <button 
                                        class="btn btn-danger return-action-reject-btn" 
                                        data-action="cancel"
                                        data-order-id="<%= order.orderId %>"
                                        data-item-id="<%= item._id %>"
                                    >Reject</button>
                                    </td>
                                    
                                </tr>
                                <%}%>
                                    <% }) %>

                            </tbody>
                </table>
            </div>
        </div>

        <!-- Bootstrap JS Bundle with Popper -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                // Status update form handler
                document.querySelector("#statusUpdateForm").addEventListener("submit", async function (event) {
                    event.preventDefault(); // Prevent default form submission

                    const form = event.target;
                    const status = form.querySelector("select[name='status']").value;
                    const orderId = form.querySelector("input[name='orderId']").value;

                    try {
                        const response = await fetch(form.action, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ status, orderId })
                        });

                        const result = await response.json();

                        if (result.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Status Updated!',
                                text: 'The order status has been successfully updated.',
                                confirmButtonColor: '#5e5ce6'
                            }).then(() => {
                                location.reload();  // Reload page after showing success
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Update Failed',
                                text: result.message || 'Something went wrong.',
                                confirmButtonColor: '#ff3b30'
                            });
                        }
                    } catch (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Network Error',
                            text: 'Could not update the status due to a network error.',
                            confirmButtonColor: '#ff3b30'
                        });
                    }
                });

                // Handle simple return submission (without fetch)


                // Check for sidebar status
                function checkSidebar() {
                    const sidebar = document.querySelector('.sidebar');
                    if (sidebar && sidebar.classList.contains('collapsed')) {
                        document.body.classList.add('sidebar-collapsed');
                    } else {
                        document.body.classList.remove('sidebar-collapsed');
                    }
                }

                // Initial check
                checkSidebar();

                // Listen for sidebar toggle events
                const sidebarToggle = document.querySelector('.sidebar-toggle');
                if (sidebarToggle) {
                    sidebarToggle.addEventListener('click', function () {
                        setTimeout(checkSidebar, 50);
                    });
                }

                // Listen for window resize
                window.addEventListener('resize', checkSidebar);
            });

            // Add to existing JavaScript in viewOrder.ejs
document.querySelectorAll('.return-action-accept-btn').forEach(button => {
    button.addEventListener('click', async function() {
        const action = this.getAttribute('data-action');
        const orderId = this.getAttribute('data-order-id');
        const itemId = this.getAttribute('data-item-id');

        Swal.fire({
            title: `Are you sure?`,
            text: `Do you want to ${action} this return request?`,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#34c759',
            cancelButtonColor: '#ff3b30',
            confirmButtonText: `Yes, ${action} it!`
        }).then(async (result) => {
            if (result.isConfirmed) {
                try {
                    const response = await fetch('/admin/return-accept', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ orderId, itemId, action })
                    });

                    const result = await response.json();

                    if (result.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: result.message,
                            confirmButtonColor: '#5e5ce6'
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: result.message,
                            confirmButtonColor: '#ff3b30'
                        });
                    }
                } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Network Error',
                        text: 'Could not process the return request.',
                        confirmButtonColor: '#ff3b30'
                    });
                }
            }
        });
    });
});
      

document.querySelectorAll('.return-action-reject-btn').forEach(button => {
    button.addEventListener('click', async function() {
        const action = this.getAttribute('data-action');
        const orderId = this.getAttribute('data-order-id');
        const itemId = this.getAttribute('data-item-id');

        Swal.fire({
            title: 'Reject Return Request',
            text: `Please provide a reason for rejecting this return request:`,
            input: 'textarea',
            inputPlaceholder: 'Enter reason here...',
            inputAttributes: {
                'aria-label': 'Rejection reason'
            },
            showCancelButton: true,
            confirmButtonColor: '#34c759',
            cancelButtonColor: '#ff3b30',
            confirmButtonText: `Reject Request`
        }).then(async (result) => {
            if (result.isConfirmed && result.value.trim() !== '') {
                const reason = result.value.trim();

                try {
                    const response = await fetch('/admin/return-reject', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ orderId, itemId, action, reason })
                    });

                    const resultData = await response.json();

                    if (resultData.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: resultData.message,
                            confirmButtonColor: '#5e5ce6'
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: resultData.message,
                            confirmButtonColor: '#ff3b30'
                        });
                    }
                } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Network Error',
                        text: 'Could not process the return request.',
                        confirmButtonColor: '#ff3b30'
                    });
                }
            } else if (result.isConfirmed && result.value.trim() === '') {
                Swal.fire({
                    icon: 'warning',
                    title: 'Reason Required',
                    text: 'Please provide a reason for rejection.',
                    confirmButtonColor: '#ff9500'
                });
            }
        });
    });
});


   
        </script>
</body>

</html>