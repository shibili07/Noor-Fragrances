<%- include("../../views/partials/admin/header") %>

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <style>
        :root {
            --primary-color: #4361ee;
            --primary-hover: #3a56d4;
            --secondary-color: #6c757d;
            --accent-color: #ff6b6b;
            --bg-color: #f8f9fa;
            --card-bg: #ffffff;
            --input-bg: #ffffff;
            --border-color: #e2e8f0;
            --text-color: #2d3748;
            --text-muted: #718096;
            --error-color: #e53e3e;
            --success-color: #38a169;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--bg-color);
            color: var(--text-color);
        }

        .content-wrapper {
            padding: 20px;
            margin-top: 70px;
            margin-left: 280px;
            transition: all 0.3s ease;
            background-color: var(--bg-color);
            min-height: calc(100vh - 70px);
        }

        .section-title {
            color: var(--text-color);
            font-weight: 700;
            margin-bottom: 25px;
            position: relative;
            padding-bottom: 10px;
        }

        .section-title:after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 40px;
            height: 3px;
            background: var(--primary-color);
        }

        .card {
            border: none;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            margin-bottom: 25px;
            transition: all 0.3s ease;
            overflow: hidden;
            background-color: var(--card-bg);
        }

        .card:hover {
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
            transform: translateY(-3px);
        }

        .card-header {
            background-color: var(--card-bg);
            border-bottom: 1px solid var(--border-color);
            padding: 20px 25px;
        }

        .card-title {
            margin-bottom: 0;
            color: var(--text-color);
            font-weight: 600;
            font-size: 18px;
        }

        .card-body {
            padding: 25px;
            background-color: var(--card-bg);
        }

        .form-label {
            font-weight: 500;
            color: var(--text-color);
            margin-bottom: 8px;
            font-size: 14px;
        }

        .form-control,
        .form-select {
            border-radius: 8px;
            padding: 12px 15px;
            border: 1px solid var(--border-color);
            background-color: var(--input-bg);
            color: var(--text-color);
            font-size: 14px;
            transition: all 0.3s;
        }

        .form-control:focus,
        .form-select:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.25rem rgba(67, 97, 238, 0.15);
            background-color: var(--input-bg);
        }

        .required-label:after {
            content: '*';
            color: var(--error-color);
            margin-left: 4px;
        }

        .btn-publish {
            background: linear-gradient(45deg, var(--primary-color), var(--primary-hover));
            border: none;
            color: white;
            padding: 12px 30px;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s;
            box-shadow: 0 4px 6px rgba(67, 97, 238, 0.2);
        }

        .btn-publish:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 8px rgba(67, 97, 238, 0.25);
            background: linear-gradient(45deg, var(--primary-hover), var(--primary-color));
        }

        .btn-publish i {
            margin-right: 8px;
        }

        .error-message {
            color: var(--error-color);
            font-size: 12px;
            margin-top: 5px;
            display: none;
            animation: fadeIn 0.3s;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        .thumbnails-container {
            display: flex;
            overflow-x: auto;
            padding: 15px;
            gap: 15px;
            background-color: #f8fafc;
            border-radius: 8px;
            margin-top: 15px;
        }

        .thumbnail {
            border-radius: 8px;
            border: 1px solid var(--border-color);
            padding: 5px;
            transition: all 0.3s;
            width: 100px;
            height: 100px;
            background-size: cover;
            background-position: center;
            position: relative;
        }

        .thumbnail:hover {
            border-color: var(--primary-color);
            transform: scale(1.05);
        }

        .image-upload-container {
            border: 2px dashed var(--border-color);
            border-radius: 8px;
            padding: 25px;
            text-align: center;
            transition: all 0.3s;
            background-color: #f8fafc;
            margin-bottom: 20px;
        }

        .image-upload-container:hover {
            border-color: var(--primary-color);
            background-color: rgba(67, 97, 238, 0.05);
        }

        .price-input-group {
            position: relative;
        }

        .price-input-group input {
            padding-left: 30px;
        }

        .price-input-group:before {
            content: 'â‚¹';
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-muted);
            z-index: 10;
        }

        .form-section {
            padding: 20px 0;
            border-bottom: 1px solid var(--border-color);
        }

        .form-section:last-child {
            border-bottom: none;
        }

        .form-section-title {
            font-weight: 600;
            color: var(--text-color);
            margin-bottom: 20px;
            font-size: 16px;
        }

        .image-preview {
            width: 150px;
            height: 150px;
            background-color: #f8fafc;
            background-position: center;
            background-size: contain;
            background-repeat: no-repeat;
            border: 1px solid var(--border-color);
            margin-bottom: 15px;
            position: relative;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 8px;
        }

        .image-preview:hover::after {
            content: "Click to upload";
            position: absolute;
            background: rgba(67, 97, 238, 0.8);
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 14px;
            color: white;
            border-radius: 8px;
        }

        .image-preview-empty::before {
            content: "+";
            font-size: 40px;
            color: #cbd5e0;
        }

        .image-preview-container {
            display: flex;
            gap: 15px;
            margin-bottom: 15px;
            flex-wrap: wrap;
        }

        .variant-section {
            border: 1px solid var(--border-color);
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 15px;
            position: relative;
        }

        .variant-section .delete-variant-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: var(--accent-color);
            color: white;
            border: none;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 14px;
        }

        .variant-section .delete-variant-btn:hover {
            background-color: #e53e3e;
        }

        .btn-add-variant {
            background-color: var(--primary-color);
            color: white;
            padding: 10px 20px;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s;
            border: none;
        }

        .btn-add-variant:hover {
            background-color: var(--primary-hover);
            transform: translateY(-2px);
        }

        .btn-back-inline {
            background-color: var(--secondary-color);
            border: none;
            color: white;
            padding: 12px 20px;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s;
            box-shadow: 0 4px 6px rgba(108, 117, 125, 0.2);
            display: flex;
            justify-content: center;
            align-items: center;
            flex: 1;
        }

        .btn-back-inline:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 8px rgba(108, 117, 125, 0.25);
            background-color: #5a6268;
            color: white;
        }

        .btn-back-inline i {
            margin-right: 8px;
        }

        .button-group {
            display: flex;
            gap: 15px;
            width: 100%;
        }

        .btn-publish-inline {
            flex: 2;
        }

        .image-wrapper {
            position: relative;
        }

        .delete-image-btn {
            position: absolute;
            top: -10px;
            right: -10px;
            background-color: var(--accent-color);
            color: white;
            border: none;
            border-radius: 50%;
            width: 24px;
            height: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 14px;
            z-index: 10;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .delete-image-btn:hover {
            background-color: #e53e3e;
        }

        @media screen and (max-width: 1200px) {
            .content-wrapper {
                margin-left: 0;
            }
        }

        @media screen and (max-width: 992px) {
            .card-body {
                padding: 20px;
            }
        }

        @media screen and (max-width: 768px) {
            .section-title {
                font-size: 20px;
            }

            .form-section-title {
                font-size: 16px;
            }

            .form-control,
            .form-select {
                padding: 10px 12px;
            }

            .btn-publish {
                width: 100%;
            }
        }

        @media screen and (max-width: 576px) {
            .content-wrapper {
                padding: 15px;
            }

            .card {
                border-radius: 10px;
            }

            .card-body {
                padding: 15px;
            }

            .button-group {
                flex-direction: column;
            }

            .btn-back-inline,
            .btn-publish-inline {
                width: 100%;
            }
        }

        .crop-modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.5);
        }

        .crop-modal-content {
            position: relative;
            background-color: var(--card-bg);
            margin: 5% auto;
            padding: 20px;
            width: 80%;
            max-width: 600px;
            border-radius: 8px;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        }

        .crop-container {
            width: 100%;
            height: 400px;
            margin-bottom: 20px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            overflow: hidden;
        }

        .crop-container img {
            max-width: 100%;
            max-height: 100%;
        }

        .crop-buttons {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
        }

        .crop-btn {
            padding: 8px 16px;
            border-radius: 4px;
            border: none;
            cursor: pointer;
            font-weight: 500;
        }

        .crop-btn-cancel {
            background-color: var(--secondary-color);
            color: white;
        }

        .crop-btn-crop {
            background-color: var(--primary-color);
            color: white;
        }

        .close-modal {
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 24px;
            color: var(--text-muted);
            cursor: pointer;
        }

        .close-modal:hover {
            color: var(--text-color);
        }

        .scroll-top-btn {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 50px;
            height: 50px;
            background: var(--primary-color);
            color: white;
            border: none;
            border-radius: 50%;
            display: none;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            z-index: 1000;
        }

        .scroll-top-btn:hover {
            background: var(--primary-hover);
            transform: translateY(-2px);
        }
    </style>
</head>

<body>
    <section class="content-main" id="mainContent">
        <div class="content-wrapper">
            <h1 class="section-title">Edit Product Details</h1>

            <form method="patch" action="/admin/editProduct" enctype="multipart/form-data" id="productForm" onsubmit="return validateAndSubmit()">
                <input type="hidden" name="productId" value="<%= product._id %>">

                <div id="cropModal" class="crop-modal">
                    <div class="crop-modal-content">
                        <span class="close-modal" onclick="closeCropModal()">Ã—</span>
                        <h5>Crop Image</h5>
                        <div class="crop-container">
                            <img id="cropImage" src="" alt="Image to crop">
                        </div>
                        <div class="crop-buttons">
                            <button class="crop-btn crop-btn-cancel" type="button" onclick="closeCropModal()">Cancel</button>
                            <button class="crop-btn crop-btn-crop" type="button" id="cropBtn">Crop</button>
                        </div>
                    </div>
                </div>

                <input type="hidden" id="removedImages" name="removedImages">

                <div class="row">
                    <div class="col-lg-8">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title"><i class="fas fa-info-circle me-2"></i> Basic Information</h5>
                            </div>
                            <div class="card-body">
                                <div class="form-section">
                                    <div class="mb-4">
                                        <label for="productName" class="form-label required-label">Product Name</label>
                                        <input type="text" value="<%= product.productName %>" name="productName" class="form-control" id="productName">
                                        <div id="productName-error" class="error-message"></div>
                                    </div>
                                    <div class="mb-4">
                                        <label for="shortDescription" class="form-label required-label">Short Description</label>
                                        <input type="text" value="<%= product.shortDescription %>" name="shortDescription" class="form-control" id="shortDescription">
                                        <div id="shortDescription-error" class="error-message"></div>
                                    </div>
                                    <div class="mb-4">
                                        <label for="description" class="form-label required-label">Product Description</label>
                                        <textarea placeholder="Enter detailed product description" id="description" name="description" class="form-control" rows="5"><%= product.description %></textarea>
                                        <div id="description-error" class="error-message"></div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6 mb-4">
                                            <label class="form-label required-label">Category</label>
                                            <select class="form-select" name="category">
                                                <% categories.forEach(category => { %>
                                                    <option value="<%= category._id %>" <%= product.category && category._id.toString() === product.category.toString() ? 'selected' : '' %>><%= category.name %></option>
                                                <% }); %>
                                            </select>
                                            <div id="category-error" class="error-message"></div>
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label class="form-label required-label">Gender</label>
                                            <select class="form-select" name="gender">
                                                <option value="Men" <%= product.gender === "Men" ? "selected" : "" %>>Men</option>
                                                <option value="Women" <%= product.gender === "Women" ? "selected" : "" %>>Women</option>
                                                <option value="Kids" <%= product.gender === "Kids" ? "selected" : "" %>>Kids</option>
                                                <option value="Unisex" <%= product.gender === "Unisex" ? "selected" : "" %>>Unisex</option>
                                            </select>
                                            <div id="gender-error" class="error-message"></div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6 mb-4">
                                            <label for="productType" class="form-label required-label">Fragrance Type</label>
                                            <input type="text" value="<%= product.productType %>" name="productType" class="form-control" id="productType">
                                            <div id="productType-error" class="error-message"></div>
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label for="fragranceFamily" class="form-label required-label">Fragrance Family</label>
                                            <input type="text" value="<%= product.fragranceFamily %>" name="fragranceFamily" class="form-control" id="fragranceFamily">
                                            <div id="fragranceFamily-error" class="error-message"></div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6 mb-4">
                                            <label for="longevity" class="form-label required-label">Fragrance Longevity</label>
                                            <input type="text" value="<%= product.longevity %>" name="longevity" class="form-control" id="longevity">
                                            <div id="longevity-error" class="error-message"></div>
                                        </div>
                                        <div class="col-md-6 mb-4">
                                            <label for="brand" class="form-label required-label">Brand</label>
                                            <input type="text" value="<%= product.brand %>" name="brand" class="form-control" id="brand">
                                            <div id="brand-error" class="error-message"></div>
                                        </div>
                                    </div>
                                    <div class="mb-4">
                                        <label for="usage" class="form-label required-label">Usage</label>
                                        <input type="text" value="<%= product.usage %>" name="usage" class="form-control" id="usage">
                                        <div id="usage-error" class="error-message"></div>
                                    </div>
                                    <div class="mb-4">
                                        <label for="productOffer" class="form-label">Product Offer (%)</label>
                                        <input type="number" value="<%= product.productOffer %>" name="productOffer" class="form-control" id="productOffer" min="0" max="100">
                                        <div id="productOffer-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title"><i class="fas fa-sliders-h me-2"></i> Product Variants</h5>
                            </div>
                            <div class="card-body">
                                <div id="variants-container">
                                    <% product.variants.forEach((variant, index) => { %>
                                        <div class="variant-section" id="variant-<%= index %>">
                                            <button type="button" class="delete-variant-btn" onclick="removeVariant(<%= index %>)">Ã—</button>
                                            <div class="row">
                                                <div class="col-md-4 mb-4">
                                                    <label class="form-label required-label">Size (ml)</label>
                                                    <input type="text" name="variants[<%= index %>][size]" value="<%= variant.size %>" class="form-control" id="variant-size-<%= index %>">
                                                    <div id="variant-size-<%= index %>-error" class="error-message"></div>
                                                </div>
                                                <div class="col-md-4 mb-4">
                                                    <label class="form-label required-label">Regular Price</label>
                                                    <div class="price-input-group">
                                                        <input type="number" name="variants[<%= index %>][regularPrice]" value="<%= variant.regularPrice %>" class="form-control" id="variant-regularPrice-<%= index %>" min="0" step="0.01">
                                                    </div>
                                                    <div id="variant-regularPrice-<%= index %>-error" class="error-message"></div>
                                                </div>
                                                <div class="col-md-4 mb-4">
                                                    <label class="form-label">Sale Price</label>
                                                    <div class="price-input-group">
                                                        <input type="number" name="variants[<%= index %>][salePrice]" value="<%= variant.salePrice || '' %>" class="form-control" id="variant-salePrice-<%= index %>" min="0" step="0.01">
                                                    </div>
                                                    <div id="variant-salePrice-<%= index %>-error" class="error-message"></div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-6 mb-4">
                                                    <label class="form-label required-label">Quantity</label>
                                                    <input type="number" name="variants[<%= index %>][quantity]" value="<%= variant.quantity %>" class="form-control" id="variant-quantity-<%= index %>" min="0">
                                                    <div id="variant-quantity-<%= index %>-error" class="error-message"></div>
                                                </div>
                                                <div class="col-md-6 mb-4">
                                                    <label class="form-label required-label">SKU</label>
                                                    <input type="text" name="variants[<%= index %>][sku]" value="<%= variant.sku %>" class="form-control" id="variant-sku-<%= index %>">
                                                    <div id="variant-sku-<%= index %>-error" class="error-message"></div>
                                                </div>
                                            </div>
                                        </div>
                                    <% }); %>
                                </div>
                                <button type="button" class="btn-add-variant" onclick="addVariant()"><i class="fas fa-plus me-2"></i>Add Variant</button>
                                <div id="variants-error" class="error-message"></div>
                            </div>
                        </div>

                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title"><i class="fas fa-cog me-2"></i> Product Status</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-4 mb-4">
                                        <label class="form-label required-label">Status</label>
                                        <select class="form-select" name="status">
                                            <option value="Available" <%= product.status === "Available" ? "selected" : "" %>>Available</option>
                                            <option value="out of stock" <%= product.status === "out of stock" ? "selected" : "" %>>Out of Stock</option>
                                            <option value="Discontinued" <%= product.status === "Discontinued" ? "selected" : "" %>>Discontinued</option>
                                        </select>
                                        <div id="status-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-4">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="card-title"><i class="fas fa-images me-2"></i> Product Images</h5>
                            </div>
                            <div class="card-body">
                                <label class="form-label">Product Images (Up to 3):</label>
                                <div class="image-preview-container">
                                    <% for(let i = 0; i < 3; i++) { 
                                        let imageUrl = product && product.productImage && product.productImage[i] ? product.productImage[i] : ''; 
                                        let imageName = product && product.productImage && product.productImage[i] ? product.productImage[i] : '';
                                    %>
                                        <div class="image-wrapper" id="image-wrapper-<%= i %>">
                                            <div class="image-preview <%= !imageUrl ? 'image-preview-empty' : '' %>" id="imagePreview<%= i %>"
                                                 onclick="triggerFileInput('<%= i %>')"
                                                 style="background-image: url('<%= imageUrl %>')"
                                                 data-existing-image="<%= imageName %>">
                                            </div>
                                            <input type="file" name="images" id="productImage<%= i %>"
                                                   accept="image/png, image/jpeg, image/jpg" style="display:none;"
                                                   onchange="handleFileSelect(event, '<%= i %>')">
                                            <input type="hidden" name="existingImages[<%= i %>]" id="existingImage<%= i %>" value="<%= imageName %>">
                                            <% if (imageUrl) { %>
                                                <button type="button" class="delete-image-btn" onclick="removeExistingImage('<%= i %>')">Ã—</button>
                                            <% } %>
                                        </div>
                                    <% } %>
                                </div>
                                <div id="images-error" class="error-message"></div>
                                <div class="mt-2">
                                    <span class="text-muted" style="font-size: 12px;">Only support the png or jpeg image formats</span>
                                </div>
                                <div id="croppedThumbnails" class="thumbnails-container"></div>
                            </div>
                        </div>
                        <div class="card">
                            <div class="card-body">
                                <div class="button-group">
                                    <a href="/admin/product" class="btn-back-inline" style="text-decoration: none;">
                                        <i class="fas fa-arrow-left"></i> Back
                                    </a>
                                    <button class="btn btn-publish btn-publish-inline" type="submit">
                                        <i class="fas fa-save"></i> Update Product
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </section>

    <button id="scrollTopBtn" class="scroll-top-btn" onclick="scrollToTop()">
        <i class="fas fa-arrow-up"></i>
    </button>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
    let cropper;
    let currentImageIndex;
    let croppedFiles = [];
    let imagesToRemove = [];
    let variantCount = <%= product.variants.length %>;

    // Image Handling Functions
    window.triggerFileInput = function(index) {
        index = parseInt(index);
        document.getElementById(`productImage${index}`).click();
    };

    window.handleFileSelect = function(event, index) {
        index = parseInt(index);
        const file = event.target.files[0];
        if (!file) return;

        const reader = new FileReader();
        reader.onload = function(e) {
            currentImageIndex = index;
            const cropImage = document.getElementById('cropImage');
            cropImage.src = e.target.result;
            document.getElementById('cropModal').style.display = 'block';

            if (cropper) cropper.destroy();
            cropper = new Cropper(cropImage, {
                aspectRatio: 1,
                viewMode: 1,
                dragMode: 'move',
                autoCropArea: 0.8,
                restore: false,
                guides: true,
                center: true,
                highlight: false,
                cropBoxMovable: true,
                cropBoxResizable: true,
                toggleDragModeOnDblclick: false
            });
        };
        reader.readAsDataURL(file);
    };

    window.closeCropModal = function() {
        document.getElementById("cropModal").style.display = "none";
        if (cropper) {
            cropper.destroy();
            cropper = null;
        }
    };

    function performCrop() {
        if (!cropper) {
            Swal.fire({ icon: "error", title: "Oops...", text: "Please select an image to crop first!" });
            return;
        }

        const canvas = cropper.getCroppedCanvas({ width: 440, height: 440 });
        if (!canvas) return;

        canvas.toBlob((blob) => {
            if (!blob) return;

            const imagePreview = document.getElementById(`imagePreview${currentImageIndex}`);
            const fileInput = document.getElementById(`productImage${currentImageIndex}`);
            const thumbnailsContainer = document.getElementById("croppedThumbnails");

            const imageUrl = URL.createObjectURL(blob);
            imagePreview.style.backgroundImage = `url(${imageUrl})`;
            imagePreview.style.backgroundSize = "cover";
            imagePreview.classList.remove("image-preview-empty");

            if (imagePreview.getAttribute('data-existing-image')) {
                const existingImageName = imagePreview.getAttribute('data-existing-image');
                if (existingImageName && existingImageName.trim() !== '') {
                    if (!imagesToRemove.includes(existingImageName)) {
                        imagesToRemove.push(existingImageName);
                    }
                }
                imagePreview.setAttribute('data-existing-image', '');
            }

            const existingThumbnail = thumbnailsContainer.querySelector(`.thumbnail[data-index="${currentImageIndex}"]`);
            if (existingThumbnail) existingThumbnail.remove();

            const thumbnail = document.createElement("div");
            thumbnail.className = "thumbnail";
            thumbnail.style.backgroundImage = `url(${imageUrl})`;
            thumbnail.dataset.index = currentImageIndex;

            const deleteBtn = document.createElement("button");
            deleteBtn.className = "delete-image-btn";
            deleteBtn.innerHTML = "Ã—";
            deleteBtn.onclick = function (e) {
                e.stopPropagation();
                removeNewImage(this.parentNode.dataset.index);
            };

            thumbnail.appendChild(deleteBtn);
            thumbnailsContainer.appendChild(thumbnail);

            const fileName = `cropped-image-${currentImageIndex}-${Date.now()}.jpg`;
            const croppedFile = new File([blob], fileName, { type: "image/jpeg" });
            croppedFiles[currentImageIndex] = croppedFile;

            const dataTransfer = new DataTransfer();
            dataTransfer.items.add(croppedFile);
            fileInput.files = dataTransfer.files;

            closeCropModal();
        }, "image/jpeg", 0.9);
    }

    function removeNewImage(index) {
        index = parseInt(index);
        const imagePreview = document.getElementById(`imagePreview${index}`);
        const fileInput = document.getElementById(`productImage${index}`);
        const thumbnailsContainer = document.getElementById("croppedThumbnails");
        const thumbnailToRemove = thumbnailsContainer.querySelector(`.thumbnail[data-index="${index}"]`);

        if (imagePreview.getAttribute('data-existing-image')) {
            const existingImageName = imagePreview.getAttribute('data-existing-image');
            if (existingImageName && existingImageName.trim() !== '') {
                if (!imagesToRemove.includes(existingImageName)) {
                    imagesToRemove.push(existingImageName);
                }
            }
            imagePreview.setAttribute('data-existing-image', '');
        }

        imagePreview.style.backgroundImage = "";
        imagePreview.classList.add("image-preview-empty");
        fileInput.value = "";
        croppedFiles[index] = null;

        if (thumbnailToRemove) thumbnailToRemove.remove();

        Swal.fire({
            position: 'top-end',
            icon: 'success',
            title: 'Image removed',
            showConfirmButton: false,
            timer: 1500,
            toast: true
        });
    }

    window.removeExistingImage = function(index) {
        index = parseInt(index);
        const imageWrapper = document.getElementById(`image-wrapper-${index}`);
        const imagePreview = document.getElementById(`imagePreview${index}`);
        const existingImage = imagePreview.getAttribute('data-existing-image');

        if (existingImage && existingImage.trim() !== '') {
            if (!imagesToRemove.includes(existingImage)) {
                imagesToRemove.push(existingImage);
            }

            imagePreview.style.backgroundImage = '';
            imagePreview.classList.add('image-preview-empty');
            imagePreview.setAttribute('data-existing-image', '');

            const existingImageInput = document.getElementById(`existingImage${index}`);
            if (existingImageInput) existingImageInput.value = '';

            const deleteBtn = imageWrapper.querySelector('.delete-image-btn');
            if (deleteBtn) deleteBtn.remove();

            Swal.fire({
                position: 'top-end',
                icon: 'success',
                title: 'Image removed',
                showConfirmButton: false,
                timer: 1500,
                toast: true
            });
        }
    };

    // Variant Handling Functions
    window.addVariant = function() {
        const container = document.getElementById('variants-container');
        const variantHtml = `
            <div class="variant-section" id="variant-${variantCount}">
                <button type="button" class="delete-variant-btn" onclick="removeVariant(${variantCount})">Ã—</button>
                <div class="row">
                    <div class="col-md-4 mb-4">
                        <label class="form-label required-label">Size (ml)</label>
                        <input type="text" name="variants[${variantCount}][size]" class="form-control" id="variant-size-${variantCount}">
                        <div id="variant-size-${variantCount}-error" class="error-message"></div>
                    </div>
                    <div class="col-md-4 mb-4">
                        <label class="form-label required-label">Regular Price</label>
                        <div class="price-input-group">
                            <input type="number" name="variants[${variantCount}][regularPrice]" class="form-control" id="variant-regularPrice-${variantCount}" min="0" step="0.01">
                        </div>
                        <div id="variant-regularPrice-${variantCount}-error" class="error-message"></div>
                    </div>
                    <div class="col-md-4 mb-4">
                        <label class="form-label">Sale Price</label>
                        <div class="price-input-group">
                            <input type="number" name="variants[${variantCount}][salePrice]" class="form-control" id="variant-salePrice-${variantCount}" min="0" step="0.01">
                        </div>
                        <div id="variant-salePrice-${variantCount}-error" class="error-message"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6 mb-4">
                        <label class="form-label required-label">Quantity</label>
                        <input type="number" name="variants[${variantCount}][quantity]" class="form-control" id="variant-quantity-${variantCount}" min="0">
                        <div id="variant-quantity-${variantCount}-error" class="error-message"></div>
                    </div>
                    <div class="col-md-6 mb-4">
                        <label class="form-label required-label">SKU</label>
                        <input type="text" name="variants[${variantCount}][sku]" class="form-control" id="variant-sku-${variantCount}">
                        <div id="variant-sku-${variantCount}-error" class="error-message"></div>
                    </div>
                </div>
            </div>`;
        container.insertAdjacentHTML('beforeend', variantHtml);
        variantCount++;
    };

    window.removeVariant = function(index) {
        const variantSection = document.getElementById(`variant-${index}`);
        if (variantSection) {
            variantSection.remove();
            Swal.fire({
                position: 'top-end',
                icon: 'success',
                title: 'Variant removed',
                showConfirmButton: false,
                timer: 1500,
                toast: true
            });
        }
    };

    // Form Validation
    function validateForm() {
        clearErrorMessages();
        let isValid = true;

        function validateField(id, errorId, regex, errorMessage) {
            const value = document.getElementById(id)?.value?.trim() || '';
            if (!regex.test(value)) {
                displayErrorMessage(errorId, errorMessage);
                isValid = false;
            }
        }

        validateField("productName", "productName-error", /^[a-zA-Z0-9\s]+$/, "Product name should contain only alphanumeric characters.");
        validateField("shortDescription", "shortDescription-error", /.+/, "Please enter a short description.");
        validateField("description", "description-error", /.+/, "Please enter a product description.");
        validateField("productType", "productType-error", /.+/, "Please enter a fragrance type.");
        validateField("fragranceFamily", "fragranceFamily-error", /.+/, "Please enter a fragrance family.");
        validateField("longevity", "longevity-error", /.+/, "Please enter fragrance longevity.");
        validateField("brand", "brand-error", /.+/, "Please enter brand name.");
        validateField("usage", "usage-error", /.+/, "Please enter usage.");
        validateField("productOffer", "productOffer-error", /^\d+$|^$/, "Please enter a valid offer percentage (0-100).");

        // Validate images (exactly 3 images are required)
        let imageCount = 0;
        for (let i = 0; i < 3; i++) {
            if (document.getElementById(`imagePreview${i}`).style.backgroundImage) {
                imageCount++;
            }
        }
        if (imageCount !== 3) {
            displayErrorMessage("images-error", "Exactly 3 product images are required.");
            isValid = false;
        }

        const variants = document.querySelectorAll('.variant-section');
        if (variants.length === 0) {
            displayErrorMessage("variants-error", "At least one variant is required.");
            isValid = false;
        } else {
            variants.forEach((variant, index) => {
                validateField(`variant-size-${index}`, `variant-size-${index}-error`, /.+/, "Please enter a size.");
                validateField(`variant-regularPrice-${index}`, `variant-regularPrice-${index}-error`, /^\d+(\.\d{1,2})?$/, "Please enter a valid regular price.");
                validateField(`variant-quantity-${index}`, `variant-quantity-${index}-error`, /^\d+$/, "Please enter a valid quantity.");
                validateField(`variant-sku-${index}`, `variant-sku-${index}-error`, /.+/, "Please enter a valid SKU.");
                const salePrice = document.getElementById(`variant-salePrice-${index}`)?.value?.trim();
                if (salePrice && !/^\d+(\.\d{1,2})?$/.test(salePrice)) {
                    displayErrorMessage(`variant-salePrice-${index}-error`, "Please enter a valid sale price.");
                    isValid = false;
                }
            });
        }

        return isValid;
    }

    function displayErrorMessage(elementId, message) {
        const errorElement = document.getElementById(elementId);
        if (errorElement) {
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }
    }

    function clearErrorMessages() {
        document.querySelectorAll(".error-message").forEach((element) => {
            element.innerText = "";
            element.style.display = "none";
        });
    }

    // Form Submission
    window.validateAndSubmit = function() {
        if (validateForm()) {
            const submitBtn = document.querySelector('.btn-publish');
            if (submitBtn) {
                submitBtn.disabled = true;
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Updating...';
            }

            document.getElementById("removedImages").value = imagesToRemove.join(",");

            const form = document.getElementById("productForm");
            const formData = new FormData(form);

            fetch(form.action, {
                method: "PATCH", // Changed from POST to PATCH
                body: formData
            })
            .then(response => {
                if (!response.ok) throw new Error(`Server responded with status ${response.status}`);
                return response.json();
            })
            .then(data => {
                Swal.fire({
                    icon: data.success ? "success" : "error",
                    title: data.success ? "Success!" : "Error!",
                    text: data.message || "Something went wrong!",
                    confirmButtonText: "OK"
                }).then(() => {
                    if (data.success) window.location.href = "/admin/product";
                    else {
                        if (submitBtn) {
                            submitBtn.disabled = false;
                            submitBtn.innerHTML = '<i class="fas fa-save"></i> Update Product';
                        }
                    }
                });
            })
            .catch(error => {
                console.error("Error:", error);
                Swal.fire({
                    icon: "error",
                    title: "Error!",
                    text: "Something went wrong. Please try again.",
                    confirmButtonText: "OK"
                });
                if (submitBtn) {
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = '<i class="fas fa-save"></i> Update Product';
                }
            });

            return false;
        }
        return false;
    };

    // Scroll to Top
    window.scrollToTop = function() {
        window.scrollTo({ top: 0, behavior: 'smooth' });
    };

    // Show/Hide Scroll to Top Button
    window.addEventListener('scroll', function() {
        const btn = document.getElementById('scrollTopBtn');
        if (window.scrollY > 300) btn.style.display = 'flex';
        else btn.style.display = 'none';
    });

    // Initialize Crop Button
    document.getElementById("cropBtn").addEventListener("click", performCrop);
});
    </script>
</body>
</html>