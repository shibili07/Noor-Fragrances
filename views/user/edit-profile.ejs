<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>NOOR Fragrance - Edit Profile</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Akshar:wght@400;600&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.css"
    />

    <style>
      body {
        font-family: "Akshar", sans-serif;
        background-color: #f9f9f9;
        color: #333;
      }

      .user-dashboard {
        padding: 30px 15px;
        width: 100%;
        max-width: 100%;
      }

      .info-container {
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        padding: 30px;
        width: 100%;
      }

      .section-title {
        font-size: 24px;
        font-weight: 600;
        margin-bottom: 25px;
        color: #333;
        padding-bottom: 10px;
        border-bottom: 1px solid #eaeaea;
      }

      .profile-picture-container {
        text-align: center;
        margin-bottom: 30px;
      }
      .profile-picture {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        object-fit: cover;
        border: 2px solid #fd334e;
        background-color: #f1f1f1;
      }
      .profile-picture-placeholder {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        background-color: #f1f1f1;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 18px;
        color: #807d7e;
        border: 2px dashed #ccc;
      }
      .upload-profile-btn {
        background-color: #fd334e;
        color: white;
        border: none;
        padding: 12px;
        border-radius: 8px;
        width: fit-content;
        font-size: 20px;
        cursor: pointer;
        text-decoration: none;
        transition: background 0.3s ease;
      }
      .upload-profile-btn:hover {
        background-color: darkred;
      }
      #image-cropper-container {
        display: none;
        text-align: center;
        margin-top: 20px;
      }
      #image-cropper-preview {
        max-width: 100%;
        max-height: 400px;
        margin-bottom: 20px;
      }
      .submit-btn {
        background-color: #fd334e;
        color: white;
        border: none;
        padding: 12px;
        border-radius: 8px;
        width: 100%;
        font-size: 16px;
        cursor: pointer;
        transition: background 0.3s ease;
      }
      .submit-btn:hover {
        background-color: #e62b42;
      }
    </style>
  </head>
  <body>
    <%-include("../../views/partials/user/header")%>

    <div class="container-fluid user-dashboard">
      <div class="row">
        <div class="col-lg-2 mb-4">
          <%-include("../../views/partials/user/profileMenu")%>
        </div>

        <div class="col-lg-10 pt-3">
          <div class="info-container">
            <h2 class="section-title">Edit Profile</h2>

            <div class="contact-details mb-5">
              <div class="profile-picture-container">
                <!-- Always render the image element -->
                 <%if(user.userImage[0]){%>
                  <img
                  src="<%= user.userImage[0] %>"
                  alt="Profile Picture"
                  class="profile-picture"
                  id="profilePicturePreview"
                  style="<%= user.userImage ? '' : 'display: none;' %>"
                />
   
                  <%}else{%>
                    <img
                    src="https://res.cloudinary.com/dlf7ygi2x/image/upload/v1746018861/360_F_850472001_eLLSs2ZOAAqJBpJN0r3cTtBZVSdDt3TH_iqme3a.jpg"
                    alt="Profile Picture"
                    class="profile-picture"
                    id="profilePicturePreview"
                    style="<%= user.userImage ? '' : 'display: none;' %>"
                  />

               
                  <%}%>

                <br />
                <br />
                <button
                  class="upload-profile-btn"
                  onclick="document.getElementById('profilePicture').click();"
                >
                  Upload/Edit Picture
                </button>
                <input
                  type="file"
                  id="profilePicture"
                  name="profilePicture"
                  accept="image/*"
                  style="display: none"
                  oninput="validateNameInput(this)"
                />

                <!-- Cropper -->
                <div id="image-cropper-container">
                  <img id="image-cropper-preview" src="" alt="Preview" />
                  <button id="cropImageBtn" class="submit-btn">
                    Crop Image
                  </button>
                </div>
              </div>

              <!-- Form -->
              <form id="editProfileForm" enctype="multipart/form-data">
                <div class="form-group mb-3">
                  <label for="name">Change your Name</label>
                  <input
                    type="text"
                    id="name"
                    name="name"
                    class="form-control"
                    value="<%= user.name %>"
                    oninput="validateNameInput(this)"
                  />
                </div>
                <div class="form-group mb-3">
                  <label for="phone">Change your Phone</label>
                  <input
                    type="text"
                    id="phone"
                    name="phone"
                    class="form-control"
                    value="<%= user.phone %>"
                    oninput="validateNameInput(this)"
                  />
                </div>
                <button type="submit" class="submit-btn">Save Changes</button>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>

    <%-include("../../views/partials/user/footer")%>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.js"></script>

    <script>
      let cropper;
      
      // Validation functions
      function validateName(name) {
          const nameRegex = /^[A-Za-z\s]{2,50}$/;
          return nameRegex.test(name);
      }
      
      function validatePhone(phone) {
          const phoneRegex = /^[6-9]\d{9}$/;
          return phoneRegex.test(phone);
      }
      
      function validateImage(file) {
          const allowedTypes = ['image/png', 'image/jpeg', 'image/webp'];
          return allowedTypes.includes(file.type);
      }
      
      // Handle file selection and initialize cropper
      document.getElementById("profilePicture").addEventListener("change", function (event) {
          const file = event.target.files[0];
      
          if (file) {
              // Validate image type
              if (!validateImage(file)) {
                  Swal.fire({
                      icon: "error",
                      title: "Invalid File Type",
                      text: "Please upload a PNG, JPEG, or WebP image only.",
                  });
                  this.value = ''; // Clear the input
                  return;
              }
      
              const reader = new FileReader();
      
              reader.onload = function (e) {
                  const imagePreview = document.getElementById("image-cropper-preview");
                  imagePreview.src = e.target.result;
      
                  document.getElementById("image-cropper-container").style.display = "block";
      
                  if (cropper) cropper.destroy();
      
                  cropper = new Cropper(imagePreview, {
                      aspectRatio: 1,
                      viewMode: 1,
                      scalable: true,
                      zoomable: true,
                      rotatable: true,
                      cropBoxResizable: true,
                      ready: function () {
                          console.log("Cropper initialized.");
                      },
                  });
              };
      
              reader.readAsDataURL(file);
          }
      });
      
      // Handle cropping and preview update
      document.getElementById("cropImageBtn").addEventListener("click", function () {
          if (cropper) {
              const canvas = cropper.getCroppedCanvas({
                  width: 150,
                  height: 150,
              });
      
              if (!canvas) {
                  alert("Failed to crop image.");
                  return;
              }
      
              const croppedImage = canvas.toDataURL("image/jpeg");
              const profilePicturePreview = document.getElementById("profilePicturePreview");
      
              // Update the image source
              profilePicturePreview.src = croppedImage;
              profilePicturePreview.style.display = "block";
      
              // Hide the cropper container
              document.getElementById("image-cropper-container").style.display = "none";
      
              // Destroy the cropper instance
              cropper.destroy();
              cropper = null;
          }
      });
      
      // Convert Data URL to File object
      function dataURLToFile(dataURL, filename) {
          const arr = dataURL.split(",");
          const mime = arr[0].match(/:(.*?);/)[1];
          const bstr = atob(arr[1]);
          let n = bstr.length;
          const u8arr = new Uint8Array(n);
      
          while (n--) {
              u8arr[n] = bstr.charCodeAt(n);
          }
      
          return new File([u8arr], filename, { type: mime });
      }
      
      // Handle form submission
      document.getElementById("editProfileForm").onsubmit = async function (e) {
          e.preventDefault();
      
          // Get form values
          const name = document.getElementById("name").value.trim();
          const phone = document.getElementById("phone").value.trim();
      
          // Validate form inputs
          if (!validateName(name)) {
              Swal.fire({
                  icon: "error",
                  title: "Invalid Name",
                  text: "Name should be 2-50 characters long and contain only letters and spaces.",
              });
              return;
          }
      
          if (!validatePhone(phone)) {
              Swal.fire({
                  icon: "error",
                  title: "Invalid Phone Number",
                  text: "Please enter a valid 10-digit Indian phone number starting with 6-9.",
              });
              return;
          }
      
          const formData = new FormData(this);
          const profilePicturePreview = document.getElementById("profilePicturePreview");
      
          // If a new image was cropped, add it to FormData
          if (profilePicturePreview.src.startsWith("data:")) {
              const croppedImageDataURL = profilePicturePreview.src;
              const file = dataURLToFile(croppedImageDataURL, "profile-picture.jpg");
              formData.set("profilePicture", file);
          }
      
          try {
              const userId = "<%= user._id %>";
      
              // Show loading popup
              Swal.fire({
                  title: "Updating...",
                  text: "Please wait while we update your profile.",
                  allowOutsideClick: false,
                  didOpen: () => {
                      Swal.showLoading();
                  },
              });
      
              const response = await fetch(`/editProfile?userId=${userId}`, {
                  method: "PATCH",
                  body: formData,
              });
      
              const result = await response.json();
      
              if (!response.ok || !result.success) {
                  Swal.fire({
                      icon: "error",
                      title: "Error",
                      text: result.message || "Failed to update profile.",
                  });
                  return;
              }
      
              Swal.fire({
                  icon: "success",
                  title: "Success",
                  text: "Profile updated successfully!",
              }).then(() => {
                  window.location.href = "/profile";
              });
          } catch (err) {
              console.error("Error:", err);
              Swal.fire({
                  icon: "error",
                  title: "Error",
                  text: "An error occurred while updating the profile.",
              });
          }
      };
      </script>
  </body>
</html>
