<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Noor Fragrances - Reset Password</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: Arial, sans-serif;
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        background-color: #f0f2f5;
      }
      .container {
        display: flex;
        width: 800px;
        height: 500px;
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      }
      .background {
        flex: 1;
        background-image: url("/img/logo/logo3.png");
        background-size: 400% 400%;
        position: relative;
        animation: gradientBG 15s ease infinite;
        display: flex;
        justify-content: center;
        align-items: center;
      }
      .logo {
        color: white;
        font-size: 48px;
        font-weight: bold;
        position: relative;
        z-index: 10;
      }
      .logo-text {
        position: absolute;
        color: rgba(255, 255, 255, 0.3);
        font-size: 14px;
        text-transform: uppercase;
        letter-spacing: 4px;
      }
      .logo-text.top {
        top: 30px;
        left: 30px;
        transform: rotate(-90deg) translateX(-100%);
        transform-origin: top left;
      }
      .logo-text.bottom {
        bottom: 30px;
        right: 30px;
        transform: rotate(90deg) translateX(100%);
        transform-origin: bottom right;
      }
      .form-section {
        flex: 1;
        background: white;
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding: 40px;
      }
      .form-title {
        text-align: center;
        margin-bottom: 30px;
        color: #2c3e50;
      }
      .input-group {
        display: flex;
        align-items: center;
        position: relative;
        width: 100%;
        margin-bottom: 20px;
      }
      .form-input {
        width: 100%;
        padding: 12px 15px;
        border: 1px solid #e0e0e0;
        border-radius: 6px;
        font-size: 16px;
      }
      .toggle-password {
        position: absolute;
        right: 15px;
        background: none;
        border: none;
        cursor: pointer;
        font-size: 16px;
        color: #2c3e50;
      }
      .form-button {
        width: 100%;
        padding: 12px;
        background-color: #2c3e50;
        color: white;
        border: none;
        border-radius: 6px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s ease;
      }
      .form-button:hover {
        background-color: #34495e;
      }
      @keyframes gradientBG {
        0% {
          background-position: 0% 50%;
        }
        50% {
          background-position: 100% 50%;
        }
        100% {
          background-position: 0% 50%;
        }
      }
      .error-message {
        color: red;
        font-size: 14px;
        display: none;
        margin-top: -10px;
        margin-bottom: 10px;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div class="background">
        <div class="logo-text top">Noor</div>
        <div class="logo">NR</div>
        <div class="logo-text bottom">Fragrances</div>
      </div>
      <div class="form-section">
        <h2 class="form-title">Enter New Password</h2>
        <form id="passwordResetForm" method="post" action="/changePassword">
          <div class="input-group">
            <input
              type="password"
              id="password"
              class="form-input"
              name="password"
              placeholder="New password"
            />
          </div>
          <div id="error4" class="error-message"></div>

          <div class="input-group">
            <input
              type="password"
              id="confirmPassword"
              class="form-input"
              name="confirmPassword"
              placeholder="Confirm new password"
            />
          </div>
          <div id="error5" class="error-message"></div>

          <input type="submit" class="form-button" value="Save Changes" />
        </form>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
const password = document.getElementById("password");
const confirmPassword = document.getElementById("confirmPassword");
const passwordResetForm = document.getElementById("passwordResetForm");
const error4 = document.getElementById("error4");
const error5 = document.getElementById("error5");

function validatePasswords() {
    const passval = password.value.trim();
    const cpassval = confirmPassword.value.trim();
    const alpha = /[a-zA-Z]/;
    const digit = /\d/;
    let isValid = true;

    error4.style.display = "none";
    error5.style.display = "none";

    if (passval.length < 8 || !alpha.test(passval) || !digit.test(passval)) {
        error4.style.display = "block";
        error4.textContent = "Password must be at least 8 characters long and contain letters and numbers.";
        isValid = false;
    }

    if (passval !== cpassval) {
        error5.style.display = "block";
        error5.textContent = "Passwords do not match.";
        isValid = false;
    }

    return isValid;
}

// Handle form submission with SweetAlert2
passwordResetForm.addEventListener("submit", async function (e) {
    e.preventDefault(); // Prevent default form submission

    if (!validatePasswords()) return;

    try {
        const response = await fetch("/changePassword", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                password: password.value.trim(),
                confirmPassword: confirmPassword.value.trim(),
            }),
        });

        const data = await response.json();

        if (response.ok) {
            Swal.fire({
                icon: "success",
                title: "Success!",
                text: data.message,
                confirmButtonColor: "#2c3e50",
            }).then(() => {
                window.location.href = "/login"; // Redirect to login page
            });
        } else {
            Swal.fire({
                icon: "error",
                title: "Oops...",
                text: data.message,
                confirmButtonColor: "#2c3e50",
            });
        }
    } catch (error) {
        Swal.fire({
            icon: "error",
            title: "Error",
            text: "Something went wrong! Please try again later.",
            confirmButtonColor: "#2c3e50",
        });
    }
});

    </script>
  </body>
</html>