<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Successful</title>
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- Google Fonts -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap">
    <!-- Animation Library -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <!-- jsPDF for invoice generation -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.28/jspdf.plugin.autotable.min.js"></script>
    <style>
        :root {
            --primary: #4CAF50;
            --primary-dark: #3e8e41;
            --secondary: #2196F3;
            --light: #f8f9fa;
            --dark: #343a40;
            --success: #28a745;
            --danger: #dc3545;
            --warning: #ffc107;
            --info: #17a2b8;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            background-color: #f5f5f5;
            color: #333;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .container {
            width: 90%;
            max-width: 1200px;
            margin: 2rem auto;
            padding: 1rem;
        }

        .success-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            margin-bottom: 2rem;
            position: relative;
        }

        .success-header {
            background: var(--primary);
            color: white;
            padding: 2rem;
            text-align: center;
            position: relative;
        }

        .success-icon {
            font-size: 4rem;
            margin-bottom: 1rem;
            animation: bounceIn 1s;
        }

        .success-title {
            font-size: 2rem;
            margin-bottom: 0.5rem;
            animation: fadeInUp 1s 0.2s both;
        }

        .success-subtitle {
            font-size: 1.1rem;
            opacity: 0.9;
            animation: fadeInUp 1s 0.4s both;
        }

        .success-confetti {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
        }

        .order-details {
            padding: 2rem;
            animation: fadeIn 1s 0.6s both;
        }

        .detail-row {
            display: flex;
            justify-content: space-between;
            padding: 1rem 0;
            border-bottom: 1px solid #eee;
        }

        .detail-row:last-child {
            border-bottom: none;
        }

        .detail-label {
            font-weight: 600;
            color: #666;
        }

        .detail-value {
            font-weight: 500;
            color: #333;
        }

        .items-table {
            width: 100%;
            border-collapse: collapse;
            margin: 1.5rem 0;
        }

        .items-table th {
            background: #f8f8f8;
            padding: 0.75rem;
            text-align: left;
            border-bottom: 2px solid #ddd;
        }

        .items-table td {
            padding: 0.75rem;
            border-bottom: 1px solid #eee;
        }

        .price-summary {
            background: #f8f8f8;
            padding: 1.5rem;
            border-radius: 8px;
            margin-top: 1.5rem;
        }

        .price-row {
            display: flex;
            justify-content: space-between;
            padding: 0.5rem 0;
        }

        .total-row {
            font-weight: 700;
            font-size: 1.2rem;
            border-top: 2px solid #ddd;
            padding-top: 1rem;
            margin-top: 0.5rem;
        }

        .action-buttons {
            display: flex;
            gap: 1rem;
            justify-content: center;
            margin-top: 2rem;
            flex-wrap: wrap;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            padding: 0.75rem 1.5rem;
            border-radius: 50px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            border: none;
            text-decoration: none;
            font-size: 1rem;
        }

        .btn-primary {
            background: var(--primary);
            color: white;
        }

        .btn-primary:hover {
            background: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(76, 175, 80, 0.3);
        }

        .btn-secondary {
            background: white;
            color: var(--dark);
            border: 2px solid #ddd;
        }

        .btn-secondary:hover {
            background: #f5f5f5;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .order-status {
            margin: 2rem 0;
        }

        .status-track {
            display: flex;
            justify-content: space-between;
            margin-top: 1.5rem;
            position: relative;
        }

        .status-step {
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
            z-index: 1;
            flex: 1;
        }

        .status-icon {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: white;
            border: 2px solid #ddd;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            color: #888;
            margin-bottom: 0.5rem;
            position: relative;
            transition: all 0.3s ease;
        }

        .status-text {
            font-size: 0.9rem;
            color: #888;
            text-align: center;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .status-track::before {
            content: '';
            position: absolute;
            top: 25px;
            left: 0;
            right: 0;
            height: 2px;
            background: #ddd;
            z-index: 0;
        }

        .status-step.active .status-icon {
            background: var(--primary);
            border-color: var(--primary);
            color: white;
            box-shadow: 0 0 0 4px rgba(76, 175, 80, 0.2);
        }

        .status-step.active .status-text {
            color: var(--primary);
            font-weight: 600;
        }

        .status-step.completed .status-icon {
            background: var(--primary);
            border-color: var(--primary);
            color: white;
        }

        .status-step.completed .status-text {
            color: var(--primary);
        }

        .status-step.completed::after {
            background: var(--primary);
        }

        @media (max-width: 768px) {
            .container {
                width: 95%;
                padding: 0.5rem;
            }

            .success-header {
                padding: 1.5rem 1rem;
            }

            .success-icon {
                font-size: 3rem;
            }

            .success-title {
                font-size: 1.5rem;
            }

            .success-subtitle {
                font-size: 1rem;
            }

            .order-details {
                padding: 1.5rem 1rem;
            }

            .status-track {
                flex-direction: column;
                gap: 1rem;
            }

            .status-step {
                flex-direction: row;
                gap: 1rem;
                justify-content: flex-start;
            }

            .status-track::before {
                display: none;
            }

            .status-step::after {
                display: none;
            }

            .items-table {
                font-size: 0.9rem;
            }

            .items-table th, .items-table td {
                padding: 0.5rem;
            }

            .action-buttons {
                flex-direction: column;
                gap: 0.75rem;
            }

            .btn {
                width: 100%;
                justify-content: center;
            }
        }

        /* Animation keyframes */
        @keyframes float {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
            100% { transform: translateY(0px); }
        }

        .animate-float {
            animation: float 3s ease-in-out infinite;
        }

        /* Receipt/Invoice styling */
        .invoice-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 100;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .invoice-modal.active {
            display: flex;
            opacity: 1;
        }

        .invoice-container {
            background: white;
            width: 90%;
            max-width: 800px;
            max-height: 90vh;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            opacity: 0;
            transform: scale(0.9);
            transition: all 0.3s ease;
        }

        .invoice-modal.active .invoice-container {
            opacity: 1;
            transform: scale(1);
        }

        .invoice-header {
            background: var(--dark);
            color: white;
            padding: 1.5rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .invoice-close {
            background: transparent;
            border: none;
            color: white;
            font-size: 1.5rem;
            cursor: pointer;
        }

        .invoice-body {
            padding: 2rem;
            overflow-y: auto;
            max-height: calc(90vh - 70px);
        }

        .invoice-top {
            display: flex;
            justify-content: space-between;
            margin-bottom: 2rem;
        }

        .invoice-logo {
            font-size: 1.5rem;
            font-weight: 700;
        }

        .invoice-info {
            text-align: right;
        }

        .invoice-addresses {
            display: flex;
            justify-content: space-between;
            margin-bottom: 2rem;
        }

        .invoice-address {
            max-width: 45%;
        }

        .invoice-address-title {
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: #666;
        }

        .invoice-table {
            width: 100%;
            border-collapse: collapse;
            margin: 2rem 0;
        }

        .invoice-table th {
            background: #f8f8f8;
            padding: 0.75rem;
            text-align: left;
            border-bottom: 2px solid #ddd;
        }

        .invoice-table td {
            padding: 0.75rem;
            border-bottom: 1px solid #eee;
        }

        .invoice-summary {
            width: 300px;
            margin-left: auto;
        }

        .invoice-actions {
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
            margin-top: 2rem;
            padding-top: 1rem;
            border-top: 1px solid #eee;
        }

        /* Loading spinner */
        .loading-spinner {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(255,255,255,.3);
            border-radius: 50%;
            border-top-color: white;
            animation: spin 1s ease-in-out infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        /* Confetti Animation */
        .confetti {
            position: absolute;
            width: 10px;
            height: 10px;
            opacity: 0;
        }

        /* Checkmark animation */
        .checkmark-circle {
            stroke-dasharray: 166;
            stroke-dashoffset: 166;
            stroke-width: 2;
            stroke-miterlimit: 10;
            stroke: #4CAF50;
            fill: none;
            animation: stroke 0.6s cubic-bezier(0.65, 0, 0.45, 1) forwards;
        }

        .checkmark {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            display: block;
            stroke-width: 6;
            stroke: #fff;
            stroke-miterlimit: 10;
            box-shadow: inset 0px 0px 0px #4CAF50;
            animation: fill .4s ease-in-out .4s forwards, scale .3s ease-in-out .9s both;
        }

        .checkmark-check {
            transform-origin: 50% 50%;
            stroke-dasharray: 48;
            stroke-dashoffset: 48;
            animation: stroke 0.3s cubic-bezier(0.65, 0, 0.45, 1) 0.8s forwards;
        }

        @keyframes stroke {
            100% { stroke-dashoffset: 0; }
        }

        @keyframes scale {
            0%, 100% { transform: none; }
            50% { transform: scale3d(1.1, 1.1, 1); }
        }

        @keyframes fill {
            100% { box-shadow: inset 0px 0px 0px 50px #4CAF50; }
        }

        @keyframes confetti-fall {
            0% { transform: translateY(-100px) rotate(0deg); opacity: 1; }
            100% { transform: translateY(100vh) rotate(720deg); opacity: 0; }
        }

        /* Pulse animation for download button */
        @keyframes pulse {
            0% { box-shadow: 0 0 0 0 rgba(76, 175, 80, 0.4); }
            70% { box-shadow: 0 0 0 10px rgba(76, 175, 80, 0); }
            100% { box-shadow: 0 0 0 0 rgba(76, 175, 80, 0); }
        }

        .pulse {
            animation: pulse 2s infinite;
        }
    </style>
</head>
<body>
    <header>
        <%- include("../../views/partials/user/header") %>
    </header>
    <div class="container">
        <div class="success-card animate__animated animate__fadeIn">
            <div class="success-header">
                <div class="success-confetti" id="confetti-container"></div>
                <div class="success-icon animate-float" id="checkmark-container">
                    <svg class="checkmark" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52">
                        <circle class="checkmark-circle" cx="26" cy="26" r="25" fill="none"/>
                        <path class="checkmark-check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8"/>
                    </svg>
                </div>
                <h1 class="success-title">Order Successful!</h1>
                <p class="success-subtitle">Thank you for your purchase.</p>
            </div>
            
            <div class="order-details">
                <div class="detail-row">
                    <span class="detail-label">Order ID:</span>
                    <span class="detail-value" id="orderId"><%= order.orderId %></span>
                </div>
                <div class="detail-row">
                    <span class="detail-label">Order Date:</span>
                    <span class="detail-value" id="orderDate"><%= new Date(order.createdOn).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></span>
                </div>
                <div class="detail-row">
                    <span class="detail-label">Status:</span>
                    <span class="detail-value" id="orderStatus"><%= order.status %></span>
                </div>
                <div class="detail-row">
                    <span class="detail-label">Payment Method:</span>
                    <span class="detail-value" id="paymentMethod"><%= order.paymentMethod %></span>
                </div>
                <div class="detail-row">
                    <span class="detail-label">Order Type:</span>
                    <span class="detail-value" id="orderType"><%= order.orderType %></span>
                </div>
                
                <div class="order-status">
                    <h3>Order Status</h3>
                    <div class="status-track">
                        <div class="status-step <%= order.status === 'Pending' || order.status === 'Processing' || order.status === 'Shipped' || order.status === 'Delivered' ? 'completed' : '' %>">
                            <div class="status-icon">
                                <i class="fas fa-check"></i>
                            </div>
                            <div class="status-text">Order Placed</div>
                        </div>
                        <div class="status-step <%= order.status === 'Processing' || order.status === 'Shipped' || order.status === 'Delivered' ? 'active' : '' %>">
                            <div class="status-icon">
                                <i class="<%= order.status === 'Processing' || order.status === 'Shipped' || order.status === 'Delivered' ? 'fas fa-check' : 'fas fa-box' %>"></i>
                            </div>
                            <div class="status-text">Processing</div>
                        </div>
                        <div class="status-step <%= order.status === 'Shipped' || order.status === 'Delivered' ? 'active' : '' %>">
                            <div class="status-icon">
                                <i class="<%= order.status === 'Shipped' || order.status === 'Delivered' ? 'fas fa-check' : 'fas fa-truck' %>"></i>
                            </div>
                            <div class="status-text">Shipped</div>
                        </div>
                        <div class="status-step <%= order.status === 'Delivered' ? 'active' : '' %>">
                            <div class="status-icon">
                                <i class="<%= order.status === 'Delivered' ? 'fas fa-check' : 'fas fa-home' %>"></i>
                            </div>
                            <div class="status-text">Delivered</div>
                        </div>
                    </div>
                </div>
                
                <h3>Order Items</h3>
                <table class="items-table" id="orderItems">
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Quantity</th>
                            <th>Price</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody id="orderItemsList">
                        <% order.orderedItems.forEach(item => { %>
                            <tr>
                                <td><%= item.name %></td>
                                <td><%= item.quantity %></td>
                                <td>₹<%= item.price.toFixed(2) %></td>
                                <td>₹<%= (item.price * item.quantity).toFixed(2) %></td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
                
                <div class="price-summary">
                    <div class="price-row">
                        <span>Subtotal:</span>
                        <span id="subtotal">₹<%= order.totalPrice.toFixed(2) %></span>
                    </div>
                    <div class="price-row">
                        <span>Coupon Discount:</span>
                        <span id="couponDiscount">₹<%= order.couponDiscount.toFixed(2) %></span>
                    </div>
                    <div class="price-row">
                        <span>Offer Discount:</span>
                        <span id="offerDiscount">₹<%= order.offerDiscount.toFixed(2) %></span>
                    </div>
                    <div class="price-row total-row">
                        <span>Total:</span>
                        <span id="total">₹<%= order.finalAmount.toFixed(2) %></span>
                    </div>
                </div>
                
                <div class="action-buttons">
                    <button class="btn btn-primary pulse" id="downloadInvoice">
                        <i class="fas fa-file-pdf"></i> Download Invoice
                    </button>
                    <a href="/shop" class="btn btn-secondary">
                        <i class="fas fa-shopping-bag"></i> Continue Shopping
                    </a>
                    <a href="/myOrders" class="btn btn-secondary">
                        <i class="fas fa-shopping-bag"></i> View Order Details
                    </a>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Invoice Modal -->
    <div class="invoice-modal" id="invoiceModal">
        <div class="invoice-container">
            <div class="invoice-header">
                <h2>Invoice</h2>
                <button class="invoice-close" id="closeInvoice">×</button>
            </div>
            <div class="invoice-body" id="invoiceContent">
                <div class="invoice-top">
                    <div class="invoice-logo">
                        <span>Noor Fragrances</span>
                    </div>
                    <div class="invoice-info">
                        <h3>INVOICE</h3>
                        <p>Invoice #: <span id="invoiceNumber"><%= order.orderId %></span></p>
                        <p>Date: <span id="invoiceDate"><%= new Date(order.createdOn).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }) %></span></p>
                    </div>
                </div>
                
                <div class="invoice-addresses">
                    <div class="invoice-address">
                        <div class="invoice-address-title">From:</div>
                        <p>Noor Fragrances</p>
                        <p>123 Business Street</p>
                        <p>City, State 12345</p>
                        <p>Phone: (123) 456-7890</p>
                        <p>Email: info@noorfragrances.com</p>
                    </div>
                    <div class="invoice-address">
                        <div class="invoice-address-title">Bill To:</div>
                        <p id="customerName"><%= order.address.name %></p>
                        <p id="customerAddress"><%= order.address.landMark %>, <%= order.address.addressType %></p>
                        <p id="customerCity"><%= order.address.city %>, <%= order.address.state %> <%= order.address.pincode %></p>
                        <p id="customerPhone">Phone: <%= order.address.phone %></p>
                        <p id="customerAltPhone">Alt Phone: <%= order.address.altPhone || 'N/A' %></p>
                    </div>
                </div>
                
                <table class="invoice-table">
                    <thead>
                        <tr>
                            <th>Item</th>
                            <th>Quantity</th>
                            <th>Unit Price</th>
                            <th>Amount</th>
                        </tr>
                    </thead>
                    <tbody id="invoiceItems">
                        <% order.orderedItems.forEach(item => { %>
                            <tr>
                                <td><%= item.name %></td>
                                <td><%= item.quantity %></td>
                                <td>₹<%= item.price.toFixed(2) %></td>
                                <td>₹<%= (item.price * item.quantity).toFixed(2) %></td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
                
                <div class="invoice-summary">
                    <div class="price-row">
                        <span>Subtotal:</span>
                        <span id="invoiceSubtotal">₹<%= order.totalPrice.toFixed(2) %></span>
                    </div>
                    <div class="price-row">
                        <span>Coupon Discount:</span>
                        <span id="invoiceCouponDiscount">₹<%= order.couponDiscount.toFixed(2) %></span>
                    </div>
                    <div class="price-row">
                        <span>Offer Discount:</span>
                        <span id="invoiceOfferDiscount">₹<%= order.offerDiscount.toFixed(2) %></span>
                    </div>
                    <div class="price-row total-row">
                        <span>Total:</span>
                        <span id="invoiceTotal">₹<%= order.finalAmount.toFixed(2) %></span>
                    </div>
                </div>
                
                <div class="invoice-actions">
                    <button class="btn btn-primary" id="downloadPdf">
                        <i class="fas fa-download"></i> Download PDF
                    </button>
                    <button class="btn btn-secondary" id="printInvoice">
                        <i class="fas fa-print"></i> Print
                    </button>
                </div>
            </div>
        </div>
    </div>
    <footer>
        <%- include("../../views/partials/user/footer") %>
    </footer>
    
    <script>
        // Get order data from EJS template variables
        const order = <%- JSON.stringify(order) %>;

        // Function to generate PDF using jsPDF and autoTable
        function generatePDF() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            // Header
            doc.setFontSize(20);
            doc.setFont('helvetica', 'bold');
            doc.text('Noor Fragrances', 20, 20);
            doc.setFontSize(12);
            doc.setFont('helvetica', 'normal');
            doc.text('INVOICE', 190, 20, { align: 'right' });
            doc.text(`Invoice #: ${order.orderId}`, 190, 27, { align: 'right' });
            doc.text(`Date: ${new Date(order.createdOn).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}`, 190, 34, { align: 'right' });

            // Addresses
            doc.setFontSize(10);
            doc.text('From:', 20, 45);
            doc.text('Noor Fragrances', 20, 52);
            doc.text('123 Business Street', 20, 57);
            doc.text('City, State 12345', 20, 62);
            doc.text('Phone: (123) 456-7890', 20, 67);
            doc.text('Email: info@noorfragrances.com', 20, 72);

            doc.text('Bill To:', 120, 45);
            doc.text(order.address.name, 120, 52);
            doc.text(`${order.address.landMark}, ${order.address.addressType}`, 120, 57);
            doc.text(`${order.address.city}, ${order.address.state} ${order.address.pincode}`, 120, 62);
            doc.text(`Phone: ${order.address.phone}`, 120, 67);
            doc.text(`Alt Phone: ${order.address.altPhone || 'N/A'}`, 120, 72);

            // Items Table
            doc.autoTable({
                startY: 85,
                head: [['Item', 'Quantity', 'Unit Price', 'Amount']],
                body: order.orderedItems.map(item => [
                    item.name,
                    item.quantity,
                    `₹${item.price.toFixed(2)}`,
                    `₹${(item.price * item.quantity).toFixed(2)}`
                ]),
                theme: 'striped',
                headStyles: { fillColor: [240, 240, 240], textColor: [51, 51, 51], fontStyle: 'bold' },
                styles: { fontSize: 9, cellPadding: 3 },
                columnStyles: {
                    0: { cellWidth: 80 }, // Item
                    1: { cellWidth: 30 }, // Quantity
                    2: { cellWidth: 40 }, // Unit Price
                    3: { cellWidth: 40 }  // Amount
                }
            });

            // Summary
            const tableEndY = doc.lastAutoTable.finalY + 10;
            doc.setFontSize(10);
            doc.text('Subtotal:', 140, tableEndY);
            doc.text(`₹${order.totalPrice.toFixed(2)}`, 190, tableEndY, { align: 'right' });
            doc.text('Coupon Discount:', 140, tableEndY + 7);
            doc.text(`₹${order.couponDiscount.toFixed(2)}`, 190, tableEndY + 7, { align: 'right' });
            doc.text('Offer Discount:', 140, tableEndY + 14);
            doc.text(`₹${order.offerDiscount.toFixed(2)}`, 190, tableEndY + 14, { align: 'right' });
            doc.setFont('helvetica', 'bold');
            doc.text('Total:', 140, tableEndY + 21);
            doc.text(`₹${order.finalAmount.toFixed(2)}`, 190, tableEndY + 21, { align: 'right' });

            // Payment Info
            doc.setFont('helvetica', 'normal');
            doc.text('Payment Information', 20, tableEndY + 35);
            doc.text(`Payment Method: ${order.paymentMethod}`, 20, tableEndY + 42);
            doc.text(`Order Type: ${order.orderType}`, 20, tableEndY + 49);
            doc.text('Payment Due: Upon receipt (COD) or Prepaid', 20, tableEndY + 56);

            // Footer
            const pageHeight = doc.internal.pageSize.height;
            doc.setFontSize(8);
            doc.text('Thank you for shopping with Noor Fragrances!', 20, pageHeight - 30);
            doc.text('Terms: Payment due upon receipt for COD orders. Contact info@noorfragrances.com for queries.', 20, pageHeight - 23);
            doc.text('Noor Fragrances, 123 Business Street, City, State 12345', 20, pageHeight - 16);

            // Save PDF
            doc.save(`Invoice-${order.orderId}.pdf`);
        }

        // Event listeners
        document.addEventListener('DOMContentLoaded', function() {
            // Create confetti effect
            createConfetti();
            
            // Add event listeners for invoice buttons
            const downloadInvoiceBtn = document.getElementById('downloadInvoice');
            const downloadPdfBtn = document.getElementById('downloadPdf');
            const printInvoiceBtn = document.getElementById('printInvoice');
            const invoiceModal = document.getElementById('invoiceModal');
            const closeInvoiceBtn = document.getElementById('closeInvoice');
            
            if (downloadInvoiceBtn) {
                downloadInvoiceBtn.addEventListener('click', function() {
                    invoiceModal.classList.add('active');
                });
            }
            
            if (downloadPdfBtn) {
                downloadPdfBtn.addEventListener('click', function() {
                    generatePDF();
                    setTimeout(() => invoiceModal.classList.remove('active'), 500);
                });
            }
            
            if (printInvoiceBtn) {
                printInvoiceBtn.addEventListener('click', function() {
                    window.print();
                });
            }
            
            if (closeInvoiceBtn && invoiceModal) {
                closeInvoiceBtn.addEventListener('click', function() {
                    invoiceModal.classList.remove('active');
                });
            }

            // Close modal on outside click
            invoiceModal.addEventListener('click', function(e) {
                if (e.target === invoiceModal) {
                    invoiceModal.classList.remove('active');
                }
            });
        });

        // Function to create confetti effect
        function createConfetti() {
            const confettiContainer = document.getElementById('confetti-container');
            if (!confettiContainer) return;
            
            const colors = ['#f44336', '#e91e63', '#9c27b0', '#673ab7', '#3f51b5', '#2196f3', '#03a9f4', '#00bcd4', '#009688', '#4CAF50', '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107', '#FF9800', '#FF5722'];
            
            for (let i = 0; i < 50; i++) {
                const confetti = document.createElement('div');
                confetti.className = 'confetti';
                confetti.style.left = Math.random() * 100 + '%';
                confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
                confetti.style.animation = `confetti-fall ${Math.random() * 3 + 2}s linear forwards`;
                confetti.style.animationDelay = Math.random() * 5 + 's';
                confettiContainer.appendChild(confetti);
            }
        }
    </script>
</body>
</html>