<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Reset Password - Noor Fragrances</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
  <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&family=Montserrat:wght@300;400;500;600&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
  <style>
    :root {
      --primary-color: #4CAF50; /* Light green */
      --secondary-color: #A5D6A7; /* Lighter green for gradient */
      --accent-color: #2E7D32; /* Darker green for contrast */
      --light-color: #E8F5E9; /* Very light green background */
      --error-color: #dc3545;
      --text-color: #333;
      --border-radius: 8px;
      --box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
      --transition: all 0.3s ease;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Montserrat', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: var(--light-color);
      color: var(--text-color);
      line-height: 1.5;
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 10px;
      margin: 0;
    }

    .page-container {
      display: flex;
      max-width: 900px;
      width: 100%;
      background: white;
      border-radius: var(--border-radius);
      overflow: hidden;
      box-shadow: var(--box-shadow);
      max-height: 98vh;
    }

    .image-container {
      flex: 0.8;
      background: linear-gradient(135deg, var(--secondary-color), var(--primary-color));
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
      position: relative;
    }

    .brand-logo {
      font-family: 'Playfair Display', serif;
      font-size: 2.5rem;
      font-weight: 700;
      color: white;
      text-align: center;
      letter-spacing: 2px;
      line-height: 1.2;
      z-index: 1;
      position: relative;
      text-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    }

    .brand-logo img {
      max-width: 100%;
      height: auto;
    }

    .image-container::before {
      content: '';
      position: absolute;
      width: 150%;
      height: 150%;
      background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0) 70%);
      top: -25%;
      left: -25%;
      animation: pulse 8s infinite ease-in-out;
    }

    @keyframes pulse {
      0%, 100% {
        transform: scale(1);
        opacity: 0.5;
      }
      50% {
        transform: scale(1.05);
        opacity: 0.8;
      }
    }

    .form-container {
      flex: 1.2;
      padding: 20px 30px;
      overflow-y: auto;
    }

    h1 {
      color: var(--accent-color);
      margin-bottom: 15px;
      font-weight: 600;
      text-align: center;
      font-size: 24px;
    }

    .description {
      text-align: center;
      color: var(--text-color);
      margin-bottom: 20px;
      font-size: 14px;
      line-height: 1.5;
    }

    .input-group {
      position: relative;
      margin-bottom: 20px;
    }

    .form-input {
      width: 100%;
      padding: 12px;
      border: 1px solid #ddd;
      border-radius: var(--border-radius);
      font-size: 16px;
      transition: var(--transition);
      font-family: 'Montserrat', sans-serif;
    }

    .form-input:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);
      outline: none;
    }

    .toggle-password {
      position: absolute;
      right: 15px;
      top: 50%;
      transform: translateY(-50%);
      background: none;
      border: none;
      cursor: pointer;
      font-size: 16px;
      color: var(--text-color);
    }

    .error-message {
      color: var(--error-color);
      font-size: 14px;
      margin-top: 5px;
      display: none;
    }

    .submit-btn {
      width: 100%;
      padding: 10px;
      background-color: #fff;
      color: var(--primary-color);
      border: 2px solid var(--primary-color);
      border-radius: var(--border-radius);
      font-size: 15px;
      font-weight: 600;
      cursor: pointer;
      transition: var(--transition);
      margin-top: 8px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    }

    .submit-btn:hover {
      background-color: var(--primary-color);
      color: white;
      transform: translateY(-2px);
    }

    .login-link {
      text-align: center;
      margin-top: 12px;
      font-size: 14px;
    }

    .login-link a {
      color: var(--primary-color);
      text-decoration: none;
      font-weight: 600;
      transition: var(--transition);
    }

    .login-link a:hover {
      color: var(--accent-color);
      text-decoration: underline;
    }

    @media (max-width: 768px) {
      .page-container {
        flex-direction: column;
        max-width: 90%;
      }

      .image-container {
        padding: 15px;
        max-height: 120px;
      }

      .form-container {
        padding: 20px 15px;
      }

      h1 {
        font-size: 22px;
        margin-bottom: 15px;
      }
    }
  </style>
</head>
<body>
  <div class="page-container">
    <div class="image-container">
      <div class="brand-logo">
        <img class="img-fluid" src="/img/logo/1-removebg-preview.png" alt="Noor Fragrances Logo">
      </div>
    </div>
    <div class="form-container">
      <h1>Reset Password</h1>
      <p class="description">
        Enter and confirm your new password to reset your account
      </p>
      <form id="passwordResetForm">
        <div class="input-group">
          <input
            type="password"
            id="password"
            class="form-input"
            name="password"
            placeholder="New password"
            required
          />
          <button type="button" class="toggle-password" onclick="togglePassword('password')">
            <i class="fas fa-eye"></i>
          </button>
        </div>
        <div id="error4" class="error-message"></div>

        <div class="input-group">
          <input
            type="password"
            id="confirmPassword"
            class="form-input"
            name="confirmPassword"
            placeholder="Confirm new password"
            required
          />
          <button type="button" class="toggle-password" onclick="togglePassword('confirmPassword')">
            <i class="fas fa-eye"></i>
          </button>
        </div>
        <div id="error5" class="error-message"></div>

        <button type="submit" class="submit-btn">Save Changes</button>
      </form>
      <div class="login-link">
        Password reset complete? <a href="/login">Login now</a>
      </div>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    function togglePassword(fieldId) {
      const field = document.getElementById(fieldId);
      const icon = field.nextElementSibling.querySelector('i');
      if (field.type === 'password') {
        field.type = 'text';
        icon.classList.remove('fa-eye');
        icon.classList.add('fa-eye-slash');
      } else {
        field.type = 'password';
        icon.classList.remove('fa-eye-slash');
        icon.classList.add('fa-eye');
      }
    }

    const password = document.getElementById("password");
    const confirmPassword = document.getElementById("confirmPassword");
    const passwordResetForm = document.getElementById("passwordResetForm");
    const error4 = document.getElementById("error4");
    const error5 = document.getElementById("error5");

    function validatePasswords() {
      const passval = password.value.trim();
      const cpassval = confirmPassword.value.trim();
      const alpha = /[a-zA-Z]/;
      const digit = /\d/;
      const spaces = /\s/;
      let isValid = true;

      error4.style.display = "none";
      error5.style.display = "none";

      if (passval.length < 6) {
        error4.style.display = "block";
        error4.textContent = "Password must be at least 6 characters long.";
        isValid = false;
      } else if (!alpha.test(passval)) {
        error4.style.display = "block";
        error4.textContent = "Password must contain at least one letter.";
        isValid = false;
      } else if (!digit.test(passval)) {
        error4.style.display = "block";
        error4.textContent = "Password must contain at least one number.";
        isValid = false;
      } else if (spaces.test(passval)) {
        error4.style.display = "block";
        error4.textContent = "Password cannot contain spaces.";
        isValid = false;
      }

      if (passval !== cpassval) {
        error5.style.display = "block";
        error5.textContent = "Passwords do not match.";
        isValid = false;
      }

      return isValid;
    }

    passwordResetForm.addEventListener("submit", async function (e) {
      e.preventDefault();

      if (!validatePasswords()) return;

      Swal.fire({ title: 'Saving new password...', didOpen: () => Swal.showLoading() });

      try {
        const response = await fetch("/forgotPassword", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            password: password.value.trim(),
            confirmPassword: confirmPassword.value.trim(),
          }),
        });

        const data = await response.json();

        Swal.close();
        if (response.ok) {
          Swal.fire({
            icon: "success",
            title: "Success!",
            text: data.message || "Password changed successfully.",
            showConfirmButton: false,
            timer: 1500,
          }).then(() => {
            window.location.href = "/login";
          });
        } else {
          Swal.fire({
            icon: "error",
            title: "Error!",
            text: data.message || "Something went wrong. Please try again.",
            confirmButtonColor: "#4CAF50",
            confirmButtonText: "OK",
          });
        }
      } catch (error) {
        Swal.close();
        Swal.fire({
          icon: "error",
          title: "Error!",
          text: "Failed to connect to the server. Please try again.",
          confirmButtonColor: "#4CAF50",
          confirmButtonText: "OK",
        });
      }
    });

    // Real-time validation on input
    password.addEventListener('input', validatePasswords);
    confirmPassword.addEventListener('input', validatePasswords);

    document.addEventListener('DOMContentLoaded', () => {
      document.getElementById('password').focus();
    });
  </script>
</body>
</html>