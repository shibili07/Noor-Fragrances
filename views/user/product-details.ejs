<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>
    <%= product.productName %> | Details
  </title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    /* Header and Footer spaces */
    .header-space {
      width: 100%;
      min-height: 80px;
      background-color: #f8f9fa;
    }

    .footer-space {
      width: 100%;
      min-height: 100px;
      background-color: #f8f9fa;
      margin-top: 50px;
    }

    body {
      background-color: #fff;
    }

    .breadcrumb {
      display: flex;
      padding: 10px 5%;
      background-color: #f9f9f9;
      font-size: 14px;
    }

    .breadcrumb a {
      text-decoration: none;
      color: #666;
      margin: 0 5px;
    }

    .breadcrumb span {
      margin: 0 5px;
      color: #333;
    }

    .container {
      width: 100%;
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
    }

    .product-container {
      display: flex;
      flex-wrap: wrap;
      gap: 30px;
    }

    .product-images {
      flex: 1;
      min-width: 300px;
      position: relative;
    }

    .main-image {
      width: 100%;
      border-radius: 10px;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .thumbnail-container {
      display: flex;
      gap: 10px;
      margin-top: 15px;
    }

    .thumbnail {
      width: 70px;
      height: 70px;
      border-radius: 8px;
      cursor: pointer;
      border: 2px solid transparent;
      object-fit: cover;
    }

    .thumbnail.active {
      border-color: #ff4a4a;
    }

    .product-info {
      flex: 1;
      min-width: 300px;
    }

    .product-title {
      font-size: 24px;
      font-weight: 600;
      margin-bottom: 10px;
      color: #333;
    }

    .rating {
      display: flex;
      align-items: center;
      margin-bottom: 20px;
    }

    .stars {
      color: #ffc107;
      font-size: 18px;
      margin-right: 10px;
    }

    .reviews {
      color: #666;
      font-size: 14px;
      display: flex;
      align-items: center;
    }

    .reviews img {
      margin-right: 5px;
      width: 16px;
      height: 16px;
    }

    .available-size {
      margin-bottom: 15px;
    }

    .size-label {
      font-size: 14px;
      color: #666;
      margin-bottom: 8px;
    }

    .form-check-inline {
      display: inline-block;
      margin-right: 15px;
      margin-bottom: 10px;
    }

    .form-check-input {
      margin-right: 5px;
    }

    .disabled-label {
      color: #aaa;
    }

    .size-btn {
      background-color: #333;
      color: white;
      border: none;
      padding: 8px 15px;
      border-radius: 20px;
      cursor: pointer;
    }

    .quantity-controls {
      display: flex;
      align-items: center;
      margin: 20px 0;
    }

    .quantity-btn {
      width: 30px;
      height: 30px;
      background-color: #f1f1f1;
      border: none;
      cursor: pointer;
      font-size: 16px;
      border-radius: 4px;
    }

    .quantity-input {
      margin: 0 10px;
      width: 50px;
      text-align: center;
      padding: 5px;
      border: 1px solid #ddd;
      border-radius: 4px;
    }

    .price-actions {
      display: flex;
      align-items: center;
      gap: 15px;
      margin: 20px 0;
    }

    .add-to-cart {
      background-color: #ff4a4a;
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 5px;
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 8px;
      transition: all 0.2s ease;
    }

    .add-to-cart:hover {
      background-color: #e04343;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      transform: translateY(-2px);
    }

    .add-to-cart:active {
      transform: scale(0.96);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    .price {
      font-size: 24px;
      font-weight: 600;
      color: #333;
    }

    .wishlist {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background-color: #fff;
      border: 1px solid #ddd;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
    }

    .wishlist svg {
      fill: #ff4a4a;
    }

    .product-details {
      margin-top: 30px;
    }

    .details-title {
      font-size: 18px;
      font-weight: 600;
      margin-bottom: 15px;
      color: #333;
    }

    .details-table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 20px;
    }

    .details-table td {
      padding: 8px 0;
      border-bottom: 1px solid #eee;
    }

    .details-table td:first-child {
      color: #666;
      width: 150px;
    }

    .benefits {
      list-style: none;
      margin-top: 20px;
    }

    .benefits li {
      margin-bottom: 10px;
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .benefits li::before {
      content: "â€¢";
      color: #333;
      font-weight: bold;
    }

    .services {
      display: flex;
      gap: 20px;
      margin-top: 20px;
      flex-wrap: wrap;
    }

    .service {
      display: flex;
      align-items: center;
      gap: 10px;
      font-size: 14px;
      color: #666;
    }

    .tabs {
      margin-top: 40px;
      border-bottom: 1px solid #ddd;
      display: flex;
      gap: 20px;
    }

    .tab {
      padding: 10px 0;
      cursor: pointer;
      position: relative;
      font-weight: 500;
    }

    .tab.active {
      color: #ff4a4a;
    }

    .tab.active::after {
      content: '';
      position: absolute;
      bottom: -1px;
      left: 0;
      width: 100%;
      height: 2px;
      background-color: #ff4a4a;
    }

    .tab-content {
      padding: 20px 0;
    }

    .product-description {
      margin-bottom: 20px;
    }

    .about-item {
      margin-top: 20px;
    }

    .similar-products {
      margin-top: 40px;
    }

    .section-title {
      font-size: 20px;
      font-weight: 600;
      margin-bottom: 20px;
      color: #333;
      border-left: 3px solid #ff4a4a;
      padding-left: 10px;
    }

    .product-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 20px;
    }

    .product-card {
      border-radius: 10px;
      overflow: hidden;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
      position: relative;
    }

    .product-card img {
      width: 100%;
      height: 200px;
      object-fit: cover;
    }

    .product-card-wishlist {
      position: absolute;
      top: 10px;
      right: 10px;
      width: 30px;
      height: 30px;
      border-radius: 50%;
      background-color: white;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
    }

    .product-card-info {
      padding: 15px;
    }

    .product-card-title {
      font-size: 16px;
      font-weight: 500;
      margin-bottom: 5px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    .product-card-brand {
      font-size: 12px;
      color: #666;
      margin-bottom: 10px;
    }

    .product-card-price {
      font-size: 18px;
      font-weight: 600;
      color: #333;
    }

    /* Extra image for product details */
    .product-detail-image {
      width: 100%;
      border-radius: 10px;
      margin: 20px 0;
    }

    /* Zoom Lens Styles */
    .zoom-container {
      position: relative;
      display: inline-block;
      width: 100%;
    }

    .zoom-lens {
      position: absolute;
      border: 2px solid #fff;
      border-radius: 50%;
      cursor: crosshair;
      width: 200px;
      height: 200px;
      opacity: 0;
      pointer-events: none;
      transition: opacity 0.2s;
      background-repeat: no-repeat;
      background-size: 300%;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    }

    .zoom-container:hover .zoom-lens {
      opacity: 1;
    }

    /* Stock status indicator */
    .stock-status {
      display: inline-block;
      padding: 3px 8px;
      font-size: 12px;
      border-radius: 4 -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;
      box-sizing: border-box;
      margin-left: 5px;
    }

    .in-stock {
      background-color: #e6f7e6;
      color: #2e7d32;
    }

    .out-of-stock {
      background-color: #ffebee;
      color: #c62828;
    }

    /* Offer Section Styles */
    .offer-section {
      margin-top: 15px;
      padding: 15px;
      background-color: #f8f9fa;
      border-radius: 8px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .offer-title {
      font-size: 16px;
      font-weight: 600;
      color: #333;
      margin-bottom: 10px;
    }

    .offer-list {
      list-style: none;
    }

    .offer-item {
      padding: 10px;
      margin-bottom: 8px;
      border-radius: 5px;
      background-color: #fff;
      display: flex;
      justify-content: space-between;
      align-items: center;
      transition: background-color 0.2s;
    }

    .offer-item.best-offer {
      background-color: #e6f7e6;
      border: 2px solid #2e7d32;
    }

    .offer-details {
      flex: 1;
    }

    .offer-name {
      font-size: 14px;
      font-weight: 500;
      color: #333;
    }

    .offer-description {
      font-size: 12px;
      color: #666;
    }

    .offer-discount {
      font-size: 14px;
      font-weight: 600;
      color: #ff4a4a;
    }

    .best-offer-label {
      font-size: 12px;
      color: #2e7d32;
      font-weight: bold;
    }

    /* Responsive Styles */
    @media (max-width: 768px) {
      .product-container {
        flex-direction: column;
      }

      .price-actions {
        flex-wrap: wrap;
      }

      .tabs {
        overflow-x: auto;
        white-space: nowrap;
        padding-bottom: 5px;
      }

      .product-grid {
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
      }
    }

    @media (max-width: 480px) {
      .container {
        padding: 10px;
      }

      .product-title {
        font-size: 20px;
      }

      .thumbnail {
        width: 50px;
        height: 50px;
      }

      .services {
        flex-direction: column;
        gap: 10px;
      }
    }
  </style>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css">
</head>

<body>
  <!-- Header Partial Placeholder -->
  <div class="header-space">
    <%- include("../../views/partials/user/header") %>
  </div>

  <!-- Breadcrumb Navigation -->
  <div class="breadcrumb" style="font-size: small;">
    <a href="/home">Home</a> /
    <a href="/shop">Shop</a> /
    <% if(product.category && product.category.name) { %>
    <a href="/shop?category=<%= product.category._id %>">
      <%= product.category.name %>
    </a> /
    <% } %>
    <span>
      <%= product.productName %>
    </span>
  </div>

  <!-- Main Content -->
  <div class="container">
    <!-- Product Container -->
    <div class="product-container">
      <!-- Product Images -->
      <div class="product-images">
        <div class="zoom-container">
          <img src="<%= product.productImage[0] %>" alt="<%= product.productName %>" class="main-image" id="Main-Image-container">
          <div class="zoom-lens"></div>
        </div>
        <div class="thumbnail-container">
          <% for(let i=0; i < Math.min(product.productImage.length, 5); i++) { %>
          <img src="<%= product.productImage[i] %>" alt="Thumbnail <%= i %>" class="thumbnail <%= i === 0 ? 'active' : '' %>">
          <% } %>
        </div>
        <!-- Offer Section -->
        <div class="offer-section">
          <h3 class="offer-title">Available Offer</h3>
          <% if (bestOffer) { %>
          <ul class="offer-list">
            <li class="offer-item best-offer">
              <div class="offer-details">
                <div class="offer-name">
                  <%= bestOffer.offerName %>
                </div>
                <div class="offer-description">
                  <%= bestOffer.description %>
                </div>
                <div class="best-offer-label">Best Offer - Applied</div>
              </div>
              <div class="offer-discount">
                <%= bestOffer.discountType === 'percentage' ? `${bestOffer.discountAmount}% OFF` : `â‚¹${bestOffer.discountAmount} OFF` %>
              </div>
            </li>
          </ul>
          <% } else { %>
          <p>No offers available.</p>
          <% } %>
        </div>
      </div>

      <!-- Product Info -->
      <div class="product-info">
        <h1 class="product-title">
          <%= product.shortDescription %>
        </h1>

        <div class="rating">
          <div class="stars">â˜…â˜…â˜…â˜…â˜…</div>
          <div class="reviews">
            <span>3.5</span>
            <span style="margin-left: 10px;">
              <i class="fa-solid fa-comment"></i> 120 comment
            </span>
          </div>
        </div>

        <form action="/addToCart" method="GET" id="form">
          <input type="hidden" name="productId" value="<%= product._id %>">

          <div class="available-size">
            <div class="size-label">Available Size</div>
            <% for(let i=0; i < product.variants.length; i++) { let variant=product.variants[i]; let
                            isDisabled=variant.quantity <=0; %>
            <div class="form-check form-check-inline">
              <input class="form-check-input" type="radio" id="size<%= i %>" name="productSize" value="<%= variant.size %>" <%=i===0 ? "checked" : "" %> <%= isDisabled ? "disabled" : "" %>>
              <label class="form-check-label <%= isDisabled ? 'disabled-label' : '' %>" for="size<%= i %>">
                <%= variant.size %> ml
                <% if(isDisabled) { %>
                <span class="stock-status out-of-stock">Out of Stock</span>
                <% } else { %>
                <span class="stock-status in-stock">In Stock</span>
                <% } %>
              </label>
            </div>
            <% } %>
          </div>

          <div class="quantity-controls">
            <button type="button" class="quantity-btn" onclick="decreaseQuantity()">-</button>
            <input type="number" class="quantity-input" value="1" min="1" max="5" id="quantityInput" name="quantity" readonly>
            <button type="button" class="quantity-btn" onclick="increaseQuantity()">+</button>
            <input type="hidden" id="maxStock" value="0">
          </div>

          <!-- Display price based on selected variant -->
          <div class="price-actions" id="price-container">
            <% if(product.variants && product.variants.length> 0) { %>
            <div class="price">
              <!-- Show discounted price if available, otherwise show sale price -->
              â‚¹<span id="currentPrice">
                <%= product.variants[0].discountedPrice || product.variants[0].salePrice %>
              </span>
              <!-- Show sale price with strikethrough if discounted price exists -->
              <% if(product.variants[0].discountedPrice && product.variants[0].discountedPrice <
                                    product.variants[0].salePrice) { %>
              <span style="text-decoration: line-through; color: #666; font-size: 18px; margin-left: 10px;">
                â‚¹<%= product.variants[0].salePrice %>
              </span>
              <% } %>
            </div>
            <% if(bestOffer && product.variants[0].discountedPrice &&
                                product.variants[0].discountedPrice < product.variants[0].salePrice) { %>
            <span style="background-color: #ff4a4a; color: white; padding: 2px 6px; border-radius: 4px; font-size: 12px;">
              <%= bestOffer.discountType==='percentage' ? `${bestOffer.discountAmount}% OFF` :
                                        `â‚¹${bestOffer.discountAmount} OFF` %>
            </span>
            <% } %>
            <% } %>
            <button type="submit" class="add-to-cart">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M9 22C9.55228 22 10 21.5523 10 21C10 20.4477 9.55228 20 9 20C8.44772 20 8 20.4477 8 21C8 21.5523 8.44772 22 9 22Z" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                <path d="M20 22C20.5523 22 21 21.5523 21 21C21 20.4477 20.5523 20 20 20C19.4477 20 19 20.4477 19 21C19 21.5523 19.4477 22 20 22Z" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                <path d="M1 1H5L7.68 14.39C7.77144 14.8504 8.02191 15.264 8.38755 15.5583C8.75318 15.8526 9.2107 16.009 9.68 16H19.4C19.8693 16.009 20.3268 15.8526 20.6925 15.5583C21.0581 15.264 21.3086 14.8504 21.4 14.39L23 6H6" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
              </svg>
              Add to cart
            </button>
          </div>
        </form>

        <button class="wishlist" onclick="addToWishlist('<%= product._id %>', '<%= product.variants[0].sku %>')">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z" fill="#ff4a4a" stroke="#ff4a4a" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
          </svg>
        </button>

        <div class="product-details">
          <h3 class="details-title">Product Details</h3>
          <table class="details-table">
            <tr>
              <td>Product category:</td>
              <td>
                <%= product.category && product.category.name ? product.category.name : 'N/A' %>
              </td>
            </tr>
            <tr>
              <td>Product Type:</td>
              <td>
                <%= product.productType || 'N/A' %>
              </td>
            </tr>
            <tr>
              <td>Fragrance Family:</td>
              <td>
                <%= product.fragranceFamily || 'N/A' %>
              </td>
            </tr>
            <tr>
              <td>Gender:</td>
              <td>
                <%= product.gender || 'N/A' %>
              </td>
            </tr>
            <tr>
              <td>Longevity:</td>
              <td>
                <%= product.longevity || 'N/A' %>
              </td>
            </tr>
            <tr>
              <td>Sizes:</td>
              <td>
                <% if(product.variants && product.variants.length> 0) { %>
                <% product.variants.forEach((variant, index)=> { %>
                <%= variant.size %> ml<%= index < product.variants.length - 1 ? ', ' : '' %>
                <% }); %>
                <% } else { %>
                N/A
                <% } %>
              </td>
            </tr>
            <tr>
              <td>Brand:</td>
              <td>
                <%= product.brand || 'N/A' %>
              </td>
            </tr>
            <tr>
              <td>Usage:</td>
              <td>
                <%= product.usage || 'N/A' %>
              </td>
            </tr>
          </table>

          <div class="services">
            <div class="service">
              <i class="fa-solid fa-shield"></i>
              Secure payment
            </div>
            <div class="service">
              <i class="fa-solid fa-truck-fast"></i>
              Free Shipping & Returns
            </div>
            <div class="service">
              <i class="fa-solid fa-circle-user"></i>
              Free shipping
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Product Description Tabs -->
    <div class="tabs">
      <div class="tab active">Description</div>
      <div class="tab">User Reviews</div>
      <div class="tab">Question & Answer</div>
    </div>

    <div class="tab-content">
      <div class="product-description">
        <p style="font-size: medium; font-weight: 600;">
          <%= product.description || 'No description available' %>
        </p>
      </div>

      <!-- Extra Product Image -->
      <% if(product.productImage && product.productImage.length> 2) { %>
      <img src="<%= product.productImage[2] %>" alt="<%= product.productName %> Details" class="product-detail-image">
      <% } %>

      <div class="about-item">
        <h3>About this item</h3>
        <ul class="benefits">
          <li>Long-lasting perfume for <%= product.gender || 'all' %>
          </li>
          <li>Luxurious Eau De Parfum</li>
          <li>Powerful and bold fragrance for daily wear, parties and travel</li>
          <li>
            <%= product.fragranceFamily || 'Unique fragrance profile' %>
          </li>
          <li>Perfect for gifting</li>
          <% if(bestOffer) { %>
          <li><strong>
              <%= bestOffer.discountType==='percentage' ? `${bestOffer.discountAmount}% special
                                        discount` : `â‚¹${bestOffer.discountAmount} special discount` %>
            </strong></li>
          <% } %>
        </ul>
      </div>

      <% if(product.productImage && product.productImage.length> 1) { %>
      <img src="<%= product.productImage[1] %>" alt="<%= product.productName %> Details" class="product-detail-image">
      <% } %>

      <div class="product-description">
        <p style="font-size: medium; font-weight: 600;">
          <%= product.usage || 'No usage information available' %>
        </p>
      </div>
    </div>

    <!-- Similar Products -->
    <div class="similar-products">
      <h2 class="section-title">Similar Products</h2>
      <div class="product-grid">
        <% if(similar && similar.length> 0) { %>
        <% for(let i=0; i<similar.length; i++){ %>
        <% if(similar[i].productImage && similar[i].productImage[0] && similar[i].productImage[0]
                        !==product.productImage[0]){ %>
        <div class="product-card">
          <a href="/productDetails/<%= similar[i]._id %>">
            <img src="<%= similar[i].productImage[0] %>" alt="<%= similar[i].productName %>">
          </a>
          <div class="product-card-wishlist">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z" stroke="#666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
            </svg>
          </div>
          <div class="product-card-info">
            <h3 class="product-card-title">
              <%= similar[i].productName %>
            </h3>
            <div class="product-card-brand">
              <%= similar[i].brand %>
            </div>
            <% if(similar[i].variants && similar[i].variants.length> 0) { %>
            <div class="product-card-price">
              â‚¹<%= similar[i].variants[0].discountedPrice || similar[i].variants[0].salePrice
                                            %>
            </div>
            <% } %>
          </div>
        </div>
        <% } %>
        <% } %>
        <% } else { %>
        <div style="grid-column: 1 / -1; text-align: center; padding: 20px;">
          <p>No similar products found.</p>
        </div>
        <% } %>
      </div>
    </div>
  </div>
  

 

  <!-- Footer Partial Placeholder -->
  <div class="footer-space">
    <%- include("../../views/partials/user/footer") %>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.js"></script>
  <script>
  document.addEventListener("DOMContentLoaded", () => {
    const notyf = new Notyf();
    const variants = <%- JSON.stringify(product.variants) %>;
    const priceContainer = document.getElementById("price-container");
    const currentPrice = document.getElementById("currentPrice");
    const sizeInputs = document.querySelectorAll('input[name="productSize"]');
    const quantityInput = document.getElementById("quantityInput");
    const maxStockInput = document.getElementById("maxStock");
    const form = document.getElementById("form");
    const MAX_CART_QUANTITY = 5; // Match backend limit
    let selectedSku = variants[0]?.sku;

    // Function to update price and stock display
    function updatePriceAndStock(selectedSize) {
      const variant = variants.find((v) => v.size === selectedSize);
      if (!variant) return;

      currentPrice.textContent = variant.discountedPrice || variant.salePrice;
      let priceHTML = `â‚¹<span id="currentPrice">${
        variant.discountedPrice || variant.salePrice
      }</span>`;
      if (variant.discountedPrice && variant.discountedPrice < variant.salePrice) {
        priceHTML += `<span style="text-decoration: line-through; color: #666; font-size: 18px; margin-left: 10px;">â‚¹${variant.salePrice}</span>`;
      }
      priceContainer.querySelector(".price").innerHTML = priceHTML;

      maxStockInput.value = variant.quantity;
      if (parseInt(quantityInput.value) > variant.quantity) {
        quantityInput.value = Math.max(1, variant.quantity);
      }

      // Update selectedSku
      selectedSku = variant?.sku || variants[0]?.sku;
    }

    // Fetch stock from backend API
    async function fetchStock(productId, size) {
      try {
        const response = await fetch(`/productQuantity?productId=${productId}&size=${size}`);
        const data = await response.json();
        if (data.success) {
          return data.stock;
        } else {
          notyf.error(data.message || "Unable to fetch stock.");
          return 0;
        }
      } catch (error) {
        console.error("Error fetching stock:", error);
        notyf.error("Error checking stock availability.");
        return 0;
      }
    }

    // Fetch cart quantity from backend
    async function fetchCartQuantity(productId, size) {
      try {
        const response = await fetch(`/cartQuantity?productId=${productId}&size=${size}`);
        const data = await response.json();
        return data.success ? data.quantity : 0;
      } catch (error) {
        console.error("Error fetching cart quantity:", error);
        return 0;
      }
    }

    // Update stock and price when size changes
    sizeInputs.forEach((input) => {
      input.addEventListener("change", async () => {
        const productId = form.querySelector('input[name="productId"]').value;
        const selectedSize = input.value;

        updatePriceAndStock(selectedSize);
        const stock = await fetchStock(productId, selectedSize);
        maxStockInput.value = stock;

        // Disable button if out of stock
        const addToCartBtn = form.querySelector(".add-to-cart");
        addToCartBtn.disabled = stock === 0;
        addToCartBtn.style.opacity = stock === 0 ? "0.5" : "1";
      });
    });

    // Initialize with the selected size
    const selectedSize = document.querySelector('input[name="productSize"]:checked')?.value;
    if (selectedSize) {
      updatePriceAndStock(selectedSize);
      const productId = form.querySelector('input[name="productId"]').value;
      fetchStock(productId, selectedSize).then((stock) => {
        maxStockInput.value = stock;
        const addToCartBtn = form.querySelector(".add-to-cart");
        addToCartBtn.disabled = stock === 0;
        addToCartBtn.style.opacity = stock === 0 ? "0.5" : "1";
      });
    }

    // Quantity increase function
    window.increaseQuantity = function () {
      const currentQuantity = parseInt(quantityInput.value);
      const maxStock = parseInt(maxStockInput.value);
      const maxLimit = Math.min(maxStock, MAX_CART_QUANTITY);

      if (currentQuantity >= maxLimit) {
        notyf.warning(
          `Cannot add more. ${
            maxStock > MAX_CART_QUANTITY
              ? `Maximum limit is ${MAX_CART_QUANTITY}`
              : `Only ${maxStock} items in stock`
          }.`
        );
        return;
      }

      quantityInput.value = currentQuantity + 1;
    };

    // Quantity decrease function
    window.decreaseQuantity = function () {
      const currentQuantity = parseInt(quantityInput.value);
      if (currentQuantity <= 1) {
        notyf.warning("Quantity cannot be less than 1.");
        return;
      }

      quantityInput.value = currentQuantity - 1;
    };

    // Add to wishlist function
    window.addToWishlist = async function (productId, sku) {
      try {
        const response = await fetch(`/addToWishlist/${productId}/${selectedSku}`, {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        });

        const data = await response.json();
        if (data.success) {
          notyf.success("Added to Wishlist!");
        } else {
          notyf.error(data.message || "Failed to add to wishlist.");
        }
      } catch (error) {
        console.error("Error adding to wishlist:", error);
        notyf.error("You must be logged in to add items to the wishlist.");
      }
    };

    // Form submission for adding to cart
    form.addEventListener("submit", async function (event) {
      event.preventDefault();

      const selectedSizeElement = form.querySelector('input[name="productSize"]:checked');
      if (!selectedSizeElement) {
        notyf.error("Please select a size.");
        return;
      }

      const quantity = parseInt(quantityInput.value);
      const productId = form.querySelector('input[name="productId"]').value;
      const selectedSize = selectedSizeElement.value;

      // Client-side validation
      const stock = await fetchStock(productId, selectedSize);
      const cartQuantity = await fetchCartQuantity(productId, selectedSize);
      const totalRequested = cartQuantity + quantity;

      if (totalRequested > stock) {
        notyf.error(
          `Only ${stock - cartQuantity} more items can be added. You already have ${cartQuantity} in your cart.`
        );
        return;
      }

      if (totalRequested > MAX_CART_QUANTITY) {
        notyf.error(
          `You can add a maximum of ${MAX_CART_QUANTITY} items. You already have ${cartQuantity} in your cart.`
        );
        return;
      }

      const query = new URLSearchParams({
        size: selectedSize,
        quantity: quantity,
        productId: productId,
      });

      try {
        const response = await fetch(`/addToCart?${query.toString()}`, {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        });
        const data = await response.json();
        if (data.success) {
          notyf.success("Added to Cart!");
        } else {
          notyf.error(data.message || "Something went wrong.");
          // Refresh stock
          const stock = await fetchStock(productId, selectedSize);
          maxStockInput.value = stock;
          updatePriceAndStock(selectedSize);
        }
      } catch (error) {
        console.error("Error adding to cart:", error);
        notyf.error("You must be logged in to add items to the cart.");
      }
    });

    // Thumbnail and zoom functionality
    const thumbnails = document.querySelectorAll(".thumbnail");
    const mainImage = document.getElementById("Main-Image-container");
    const zoomContainer = document.querySelector(".zoom-container");
    const zoomLens = document.querySelector(".zoom-lens");

    zoomLens.style.backgroundImage = `url(${mainImage.src})`;

    thumbnails.forEach((thumbnail) => {
      thumbnail.addEventListener("click", function () {
        thumbnails.forEach((t) => t.classList.remove("active"));
        this.classList.add("active");
        const newSrc = this.getAttribute("src");
        mainImage.setAttribute("src", newSrc);
        zoomLens.style.backgroundImage = `url(${newSrc})`;
      });
    });

    zoomContainer.addEventListener("mousemove", (e) => {
      const rect = zoomContainer.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;

      let lensX = x - zoomLens.offsetWidth / 2;
      let lensY = y - zoomLens.offsetHeight / 2;

      lensX = Math.max(0, Math.min(lensX, rect.width - zoomLens.offsetWidth));
      lensY = Math.max(0, Math.min(lensY, rect.height - zoomLens.offsetHeight));

      zoomLens.style.left = `${lensX}px`;
      zoomLens.style.top = `${lensY}px`;

      const bgPosX = (x / rect.width) * 100;
      const bgPosY = (y / rect.height) * 100;
      zoomLens.style.backgroundPosition = `${bgPosX}% ${bgPosY}%`;
    });

    zoomContainer.addEventListener("mouseenter", () => {
      zoomLens.style.opacity = "1";
    });
    zoomContainer.addEventListener("mouseleave", () => {
      zoomLens.style.opacity = "0";
    });
  });
</script>
</body>

</html>