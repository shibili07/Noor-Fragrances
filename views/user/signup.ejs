<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Noor Fragrances - Sign Up</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link rel="stylesheet"
    href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&family=Montserrat:wght@300;400;500;600&display=swap">
  <style>
    :root {
      --primary-color: #8A6D3B;
      --secondary-color: #D4AF37;
      --accent-color: #4D3B24;
      --light-color: #f5f1ea;
      --error-color: #dc3545;
      --text-color: #333;
      --border-radius: 8px;
      --box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
      --transition: all 0.3s ease;
    }

    body {
      font-family: 'Montserrat', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: var(--light-color);
      color: var(--text-color);
      line-height: 1.5;
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 10px;
      margin: 0;
    }

    .page-container {
      display: flex;
      max-width: 900px;
      width: 100%;
      background: white;
      border-radius: var(--border-radius);
      overflow: hidden;
      box-shadow: var(--box-shadow);
      max-height: 98vh;
    }

    .image-container {
      flex: 0.8;
      background: linear-gradient(135deg, var(--secondary-color), var(--primary-color));
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
      position: relative;
    }

    .brand-logo {
      font-family: 'Playfair Display', serif;
      font-size: 2.5rem;
      font-weight: 700;
      color: white;
      text-align: center;
      letter-spacing: 2px;
      line-height: 1.2;
      z-index: 1;
      position: relative;
      text-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    }

    .brand-logo span {
      display: block;
      font-size: 1.2rem;
      font-weight: 400;
      letter-spacing: 5px;
      margin-top: 5px;
      opacity: 0.9;
    }

    .image-container::before {
      content: '';
      position: absolute;
      width: 150%;
      height: 150%;
      background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0) 70%);
      top: -25%;
      left: -25%;
      animation: pulse 8s infinite ease-in-out;
    }

    @keyframes pulse {

      0%,
      100% {
        transform: scale(1);
        opacity: 0.5;
      }

      50% {
        transform: scale(1.05);
        opacity: 0.8;
      }
    }

    .signup-container {
      flex: 1.2;
      padding: 20px 30px;
      overflow-y: auto;
    }

    h1 {
      color: var(--accent-color);
      margin-bottom: 15px;
      font-weight: 600;
      text-align: center;
      font-size: 24px;
    }

    .form-group {
      margin-bottom: 12px;
      position: relative;
    }

    label {
      display: block;
      margin-bottom: 4px;
      font-weight: 500;
      color: var(--accent-color);
      font-size: 14px;
    }

    input {
      width: 100%;
      padding: 8px 12px;
      border: 1px solid #ddd;
      border-radius: var(--border-radius);
      font-size: 14px;
      transition: var(--transition);
    }

    input:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 2px rgba(139, 109, 98, 0.2);
      outline: none;
    }

    .password-container {
      position: relative;
    }

    .toggle-password {
      position: absolute;
      right: 12px;
      top: 50%;
      transform: translateY(-50%);
      cursor: pointer;
      color: #777;
      z-index: 10;
    }

    .error-message {
      color: var(--error-color);
      font-size: 12px;
      display: none;
      margin-top: 2px;
    }

    button[type="submit"] {
      width: 100%;
      padding: 10px;
      background-color: #fff;
      color: var(--primary-color);
      border: 2px solid var(--primary-color);
      border-radius: var(--border-radius);
      font-size: 15px;
      font-weight: 600;
      cursor: pointer;
      transition: var(--transition);
      margin-top: 8px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    }

    button[type="submit"]:hover {
      background-color: var(--primary-color);
      color: white;
      transform: translateY(-2px);
    }

    .google-signup-btn {
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: #fff;
      color: #757575;
      border: 1px solid #ddd;
      border-radius: var(--border-radius);
      padding: 8px;
      margin-top: 10px;
      width: 100%;
      font-size: 15px;
      cursor: pointer;
      transition: var(--transition);
      text-decoration: none;
    }

    .google-signup-btn:hover {
      background-color: #f8f8f8;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      transform: translateY(-2px);
    }

    .google-signup-btn svg {
      margin-right: 10px;
      width: 18px;
      height: 18px;
    }

    .or-divider {
      display: flex;
      align-items: center;
      text-align: center;
      margin: 15px 0;
    }

    .or-divider::before,
    .or-divider::after {
      content: '';
      flex: 1;
      border-bottom: 1px solid #ddd;
    }

    .or-divider span {
      padding: 0 15px;
      color: #757575;
      font-size: 13px;
    }

    .signin-link {
      text-align: center;
      margin-top: 12px;
      font-size: 14px;
    }

    .signin-link a {
      color: var(--primary-color);
      text-decoration: none;
      font-weight: 600;
      transition: var(--transition);
    }

    .signin-link a:hover {
      color: var(--accent-color);
      text-decoration: underline;
    }

    .optional-label {
      display: inline-flex;
      align-items: center;
      color: #777;
      font-size: 13px;
      font-weight: normal;
      margin-left: 8px;
    }

    .row-form {
      display: flex;
      gap: 10px;
    }

    .row-form .form-group {
      flex: 1;
    }

    @media (max-width: 768px) {
      .page-container {
        flex-direction: column;
        max-width: 90%;
      }

      .image-container {
        padding: 15px;
        max-height: 120px;
      }

      .signup-container {
        padding: 20px 15px;
      }

      h1 {
        font-size: 22px;
        margin-bottom: 15px;
      }

      .row-form {
        flex-direction: column;
        gap: 5px;
      }
    }
  </style>
</head>

<body>
  <div class="page-container">
    <div class="image-container">
      <div class="brand-logo">
        <img class="img-fluid" src="/img/logo/1-removebg-preview.png" alt="">
      </div>
    </div>

    <div class="signup-container">
      <h1>Create Your Account</h1>

      <form id="signForm" method="post" action="/signup">

        <div class="form-group">
          <label for="name">Full Name</label>
          <input type="text" id="name" name="name" placeholder="Enter your full name" autocomplete="name" />
          <div id="error1" class="error-message"></div>
        </div>

        <div class="row-form">
          <div class="form-group">
            <label for="email">Email Address</label>
            <input type="email" id="email" name="email" placeholder="example@email.com" autocomplete="email" />
            <div id="error2" class="error-message"></div>
          </div>

          <div class="form-group">
            <label for="phone">Phone Number</label>
            <input type="tel" id="phone" name="phone" placeholder="10-digit phone number" autocomplete="tel" />
            <div id="error3" class="error-message"></div>
          </div>
        </div>

        <div class="form-group">
          <label for="password">Password</label>
          <div class="password-container">
            <input type="password" id="password" name="password" placeholder="Create a strong password" />
            <span class="toggle-password" id="togglePassword">
              <i class="fa-solid fa-eye"></i>
            </span>
          </div>
          <div id="error4" class="error-message"></div>
        </div>

        <div class="form-group">
          <label for="confirmPassword">Confirm Password</label>
          <div class="password-container">
            <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Confirm your password" />
            <span class="toggle-password" id="toggleConfirmPassword">
              <i class="fa-solid fa-eye"></i>
            </span>
          </div>
          <div id="error5" class="error-message"></div>
        </div>

        <div class="form-group">
          <label for="referral">Referral Code <span class="optional-label">(Optional)</span></label>

          <input type="text" id="referral" name="referral" placeholder="Enter referral code if you have one"
            value="<%= referral || '' %>" />
          <div id="error6" class="error-message"></div>
        </div>


        <button type="submit" name="signup">Create Account</button>

        <div class="or-divider">
          <span>OR</span>
        </div>

        <a href="/auth/google" class="google-signup-btn" id="googleSignupBtn">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 48 48">
            <path fill="#FFC107"
              d="M43.611 20.083H42V20H24v8h11.303c-1.649 4.657-6.08 8-11.303 8-6.627 0-12-5.373-12-12s5.373-12 12-12c3.059 0 5.842 1.154 7.961 3.039l5.657-5.657C34.046 6.053 29.268 4 24 4 12.955 4 4 12.955 4 24s8.955 20 20 20 20-8.955 20-20c0-1.341-.138-2.65-.389-3.917z" />
            <path fill="#FF3D00"
              d="M6.306 14.691l6.571 4.819C14.655 15.108 18.961 12 24 12c3.059 0 5.842 1.154 7.961 3.039l5.657-5.657C34.046 6.053 29.268 4 24 4 16.318 4 9.656 8.337 6.306 14.691z" />
            <path fill="#4CAF50"
              d="M24 44c5.166 0 9.86-1.977 13.409-5.192l-6.19-5.238A11.91 11.91 0 0 1 24 36c-5.202 0-9.619-3.317-11.283-7.946l-6.522 5.025C9.505 39.556 16.227 44 24 44z" />
            <path fill="#1976D2"
              d="M43.611 20.083H42V20H24v8h11.303a12.04 12.04 0 0 1-4.087 5.571l.003-.002 6.19 5.238C36.971 39.801 44 34 44 24c0-1.341-.138-2.65-.389-3.917z" />
          </svg>
          Sign up with Google
        </a>

        <div class="signin-link">
          Already have an account? <a href="/login">Sign In</a>
        </div>
      </form>
    </div>
  </div>

  <% if (message) { %>
    <input type="hidden" id="message" value="<%= message %>">
    <% } %>


      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
        crossorigin="anonymous"></script>
      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
      <script>


        const messageInput = document.getElementById("message");

        if (messageInput) {
          const message = messageInput.value;

          if (message) {
            Swal.fire({
              title: 'Error',
              text: message,
              icon: 'error',
              confirmButtonText: 'OK'
            }).then(() => {
              // Remove the hidden field from DOM
              messageInput.remove();

              // Redirect to /signup
              window.location.href = "/signup";
            });
          }
        }


        document.addEventListener("DOMContentLoaded", () => {
          // Get form elements
          const nameid = document.getElementById("name");
          const emailid = document.getElementById("email");
          const phoneid = document.getElementById("phone");
          const password = document.getElementById("password");
          const confirmPassword = document.getElementById("confirmPassword");
          const referral = document.getElementById("referral");
          const error1 = document.getElementById("error1");
          const error2 = document.getElementById("error2");
          const error3 = document.getElementById("error3");
          const error4 = document.getElementById("error4");
          const error5 = document.getElementById("error5");
          const error6 = document.getElementById("error6");
          const signForm = document.getElementById("signForm");

          const togglePassword = document.getElementById("togglePassword");
          const toggleConfirmPassword = document.getElementById("toggleConfirmPassword");

          // Password visibility toggle
          togglePassword.addEventListener("click", function () {
            const type = password.getAttribute("type") === "password" ? "text" : "password";
            password.setAttribute("type", type);
            this.querySelector("i").classList.toggle("fa-eye");
            this.querySelector("i").classList.toggle("fa-eye-slash");
          });

          toggleConfirmPassword.addEventListener("click", function () {
            const type = confirmPassword.getAttribute("type") === "password" ? "text" : "password";
            confirmPassword.setAttribute("type", type);
            this.querySelector("i").classList.toggle("fa-eye");
            this.querySelector("i").classList.toggle("fa-eye-slash");
          });

        // Show server-side error if it exists
        <% if (locals.message && message.length > 0) { %>
            serverError.style.display = "block";
            serverError.innerHTML = "<%= message %>";
        <% } %>

            // Validation functions
            function nameValidateChecking() {
              const nameval = nameid.value.trim();
              const namepattern = /^[A-Za-z\s]+$/;
              if (!nameval) {
                error1.style.display = "block";
                error1.innerHTML = "Please enter your name";
                return false;
              } else if (!namepattern.test(nameval)) {
                error1.style.display = "block";
                error1.innerHTML = "Name can only contain alphabets and spaces";
                return false;
              } else {
                error1.style.display = "none";
                return true;
              }
            }

          function emailValidateChecking() {
            const emailval = emailid.value.trim();
            const emailpattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
            if (!emailval) {
              error2.style.display = "block";
              error2.innerHTML = "Please enter a valid email";
              return false;
            } else if (!emailpattern.test(emailval)) {
              error2.style.display = "block";
              error2.innerHTML = "Invalid email format (e.g., example@mail.com)";
              return false;
            } else {
              error2.style.display = "none";
              return true;
            }
          }

          function phoneValidateChecking() {

            const error3 = document.getElementById("error3");
            const phoneval = phoneid.value.trim();

            // Indian mobile number pattern: starts with 6-9, followed by 9 digits (total 10)
            const phonepattern = /^[6-9]\d{9}$/;

            if (!phoneval) {
              error3.style.display = "block";
              error3.innerHTML = "Please enter your phone number";
              return false;
            } else if (!phonepattern.test(phoneval)) {
              error3.style.display = "block";
              error3.innerHTML = "Enter a valid 10-digit Indian mobile number starting with 6, 7, 8, or 9";
              return false;
            } else {
              error3.style.display = "none";
              return true;
            }
          }

          function passwordValidateChecking() {
            const passval = password.value.trim();
            const cpassval = confirmPassword.value.trim();

            const alpha = /[a-zA-Z]/;
            const digit = /\d/;
            const space = /\s/;
            let isValid = true;

            // Check for minimum length
            if (passval.length < 8) {
              error4.style.display = "block";
              error4.innerHTML = "Password must be at least 8 characters long";
              isValid = false;
            }
            // Check for letters, numbers, and disallow spaces
            else if (!alpha.test(passval) || !digit.test(passval) || space.test(passval)) {
              error4.style.display = "block";
              error4.innerHTML = "Password must contain letters and numbers and should not contain spaces";
              isValid = false;
            } else {
              error4.style.display = "none";
            }

            // Confirm password check
            if (passval !== cpassval) {
              error5.style.display = "block";
              error5.innerHTML = "Passwords do not match";
              isValid = false;
            } else {
              error5.style.display = "none";
            }

            return isValid;
          }


          function referralValidateChecking() {
            const refval = referral.value.trim();
            // Optional field validation - only validate if something is entered
            if (refval && !/^[A-Za-z0-9]+$/.test(refval)) {
              error6.style.display = "block";
              error6.innerHTML = "Referral code should contain only letters and numbers";
              return false;
            } else {
              error6.style.display = "none";
              return true;
            }
          }

          // Real-time validation
          nameid.addEventListener("blur", nameValidateChecking);
          emailid.addEventListener("blur", emailValidateChecking);
          phoneid.addEventListener("blur", phoneValidateChecking);
          password.addEventListener("blur", passwordValidateChecking);
          confirmPassword.addEventListener("blur", passwordValidateChecking);
          referral.addEventListener("blur", referralValidateChecking);

          // Form submission
          signForm.addEventListener("submit", async (e) => {
            e.preventDefault();

            const isNameValid = nameValidateChecking();
            const isEmailValid = emailValidateChecking();
            const isPhoneValid = phoneValidateChecking();
            const isPasswordValid = passwordValidateChecking();
            const isReferralValid = referralValidateChecking();

            if (!(isNameValid && isEmailValid && isPhoneValid && isPasswordValid && isReferralValid)) {
              return;
            }

            // Show loading state
            Swal.fire({
              title: 'Creating your account...',
              allowOutsideClick: false,
              didOpen: () => {
                Swal.showLoading();
              }
            });

            try {
              // Create form data object
              const formData = {
                name: nameid.value.trim(),
                email: emailid.value.trim(),
                phone: phoneid.value.trim(),
                password: password.value.trim(),
                confirmPassword: confirmPassword.value.trim(),
                referral: referral.value.trim()
              };

              const response = await fetch('/signup', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
              });

              const data = await response.json();

              if (data.success) {
                Swal.fire({
                  icon: 'success',
                  title: 'Otp Verification!',
                  text: 'Please check your email for OTP verification',
                  showConfirmButton: false,
                  timer: 1500
                }).then(() => {
                  window.location.href = '/otp-verify';
                });
              } else {
                Swal.fire({
                  icon: 'error',
                  title: 'Error',
                  text: data.message || 'Something went wrong'
                });
              }
            } catch (error) {
              console.error('Error:', error);
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Network error occurred. Please try again.'
              });
            }
          });
        });



      </script>
</body>

</html>